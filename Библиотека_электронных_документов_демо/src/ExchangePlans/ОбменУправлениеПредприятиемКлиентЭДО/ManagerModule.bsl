#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ОбменДанными

// Заполняет настройки, влияющие на использование плана обмена.
// 
// Параметры:
//  Настройки - Структура - настройки плана обмена по умолчанию, см. ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию,
//                          описание возвращаемого значения функции.
//
Процедура ПриПолученииНастроек(Настройки) Экспорт
	
	Настройки.ИмяКонфигурацииИсточника = "КлиентЭДО";
	Настройки.ИмяКонфигурацииПриемника.Вставить("УправлениеПроизводственнымПредприятием");
	Настройки.ПланОбменаИспользуетсяВМоделиСервиса = Истина;
	Настройки.ПредупреждатьОНесоответствииВерсийПравилОбмена = Ложь;
	Настройки.Алгоритмы.ПриПолученииВариантовНастроекОбмена = Истина;
	Настройки.Алгоритмы.ПриПолученииОписанияВариантаНастройки = Истина;
	Настройки.Алгоритмы.ОписаниеЗначенийПоУмолчаниюБазыКорреспондента = Истина;
	Настройки.Алгоритмы.ОписаниеОграниченийПередачиДанных = Истина;
	Настройки.Алгоритмы.ОписаниеОграниченийПередачиДанныхБазыКорреспондента = Истина;
	
КонецПроцедуры

// Заполняет коллекцию вариантов настроек, предусмотренных для плана обмена.
// 
// Параметры:
//  ВариантыНастроекОбмена - ТаблицаЗначений - коллекция вариантов настроек обмена, см. описание возвращаемого значения
//                                       функции НастройкиПланаОбменаПоУмолчанию общего модуля ОбменДаннымиСервер.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияВариантовНастроек,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииВариантовНастроекОбмена(ВариантыНастроекОбмена, ПараметрыКонтекста) Экспорт
	
	ВариантНастройки = ВариантыНастроекОбмена.Добавить();
	ВариантНастройки.ИдентификаторНастройки        = "";
	ВариантНастройки.КорреспондентВЛокальномРежиме = Истина;
	
КонецПроцедуры

// Заполняет набор параметров, определяющих вариант настройки обмена.
// 
// Параметры:
//  ОписаниеВарианта       - Структура - набор варианта настройки по умолчанию,
//                                       см. ОбменДаннымиСервер.ОписаниеВариантаНастройкиОбменаПоУмолчанию,
//                                       описание возвращаемого значения.
//  ИдентификаторНастройки - Строка    - идентификатор варианта настройки обмена.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияОписанияВариантаНастройки,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииОписанияВариантаНастройки(ОписаниеВарианта, ИдентификаторНастройки, ПараметрыКонтекста) Экспорт
	
	ОписаниеВарианта.ИмяФайлаНастроекДляПриемника = НСтр("ru = 'Настройки синхронизации для УПП'");
	ОписаниеВарианта.ИспользоватьПомощникСозданияОбменаДанными = Истина;
	ОписаниеВарианта.ЗаголовокПомощникаСозданияОбмена =
		НСтр("ru = 'Синхронизация данных с ""1С:Управление производственным предприятием, ред. 1.3"" (настройка)'");
	ОписаниеВарианта.ИспользуемыеТранспортыСообщенийОбмена = ИспользуемыеТранспортыСообщенийОбмена();
	ОписаниеВарианта.КраткаяИнформацияПоОбмену = КраткаяИнформацияПоОбмену(ИдентификаторНастройки);
	ОписаниеВарианта.ПодробнаяИнформацияПоОбмену = ПодробнаяИнформацияПоОбмену(ИдентификаторНастройки);
	ОписаниеВарианта.Отборы = НастройкаОтборовНаУзле(ИдентификаторНастройки);
	ОписаниеВарианта.ОтборыКорреспондента = НастройкаОтборовНаУзлеБазыКорреспондента(ИдентификаторНастройки);
	ОписаниеВарианта.ЗначенияПоУмолчаниюКорреспондента = ЗначенияПоУмолчаниюНаУзлеБазыКорреспондента(ИдентификаторНастройки);
	ОписаниеВарианта.ОбщиеДанныеУзлов = ОбщиеДанныеУзлов();
	ОписаниеВарианта.ПутьКФайлуКомплектаПравилВКаталогеШаблонов = "1c\ClientEDOBase\";
	
КонецПроцедуры

// Возвращает строку описания ограничений миграции данных для пользователя.
// Прикладной разработчик на основе установленных отборов на узле должен сформировать 
// строку описания ограничений удобную для восприятия пользователем.
// 
// Параметры:
//  НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена.
//  ВерсияКорреспондента   - Строка    - версия корреспондента.
//  ИдентификаторНастройки - Строка    - идентификатор варианта настройки обмена.
//
// Возвращаемое значение:
//  Строка - описание ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанных(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	ПредставлениеДокументов = "";
	ПредставлениеНормативноСправочнойИнформации = "";
	ПредставлениеОграниченийОтправкиДанных = "";
		
	// Представление документов
	Если НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию Тогда
		
		ПредставлениеПериода = "";
		
		Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов) Тогда
			ПредставлениеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = ', начиная с %1'"),
			Формат(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов, "ДЛФ=DD"));
		Иначе
			ПредставлениеПериода = НСтр("ru = 'за весь период ведения учета в программе.'");
		КонецЕсли;
		
		ПредставлениеДокументов = НСтр("ru = 'Отправлять документы[ПредставлениеПериода]'");
		
		ПредставлениеДокументов = СтрЗаменить(ПредставлениеДокументов, "[ПредставлениеПериода]", ПредставлениеПериода);
		
	ИначеЕсли НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную Тогда
		
		ПредставлениеДокументов = НСтр("ru = 'Отправлять документы только вручную.'");
		
	ИначеЕсли НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать Тогда
		
		ПредставлениеДокументов = НСтр("ru = 'Не отправлять документы.'");
		
	КонецЕсли;
	
	// Нормативно-справочная информация.
	Если НастройкаОтборовНаУзле.РежимВыгрузкиСправочников = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию Тогда
		
		ПредставлениеНормативноСправочнойИнформации = НСтр("ru = 'Отправлять всю нормативно-справочную информацию.'");
		
	ИначеЕсли НастройкаОтборовНаУзле.РежимВыгрузкиСправочников = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости Тогда
		
		ПредставлениеНормативноСправочнойИнформации = НСтр("ru = 'Отправлять нормативно-справочную информацию, которая используется в отправляемых документах.'");
		
	ИначеЕсли НастройкаОтборовНаУзле.РежимВыгрузкиСправочников = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать Тогда
		
		ПредставлениеНормативноСправочнойИнформации = НСтр("ru = 'Не отправлять нормативно-справочную информацию.'");
		
	КонецЕсли;
	
	// Представление ограничений отправки данных.
	Если (НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию)
		ИЛИ (НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную)
		ИЛИ (НастройкаОтборовНаУзле.РежимВыгрузкиСправочников = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию) Тогда
		
		ПредставлениеУчастниковЭДО = "";
		
		Если НастройкаОтборовНаУзле.ИспользоватьОтборПоУчастникамЭДО Тогда
			СоответствиеУчастниковЭДО = Новый Соответствие;
			МассивОрганизаций  = НастройкаОтборовНаУзле.УчастникиЭДО.Организация;
			МассивКонтрагентов = НастройкаОтборовНаУзле.УчастникиЭДО.Контрагент;
			Для Счетчик = 0 По МассивОрганизаций.Количество() - 1 Цикл
				Организация = МассивОрганизаций[Счетчик];
				Контрагенты = СоответствиеУчастниковЭДО.Получить(Организация);
				Если Контрагенты = Неопределено Тогда
					Контрагенты = Новый Массив;
					Контрагенты.Добавить(МассивКонтрагентов[Счетчик]);
					СоответствиеУчастниковЭДО.Вставить(Организация, Контрагенты);
				Иначе
					Контрагенты.Добавить(МассивКонтрагентов[Счетчик]);
				КонецЕсли;
			КонецЦикла;
			
			ПредставленияОтбора = "";
			Для Каждого ЭлементСоответствия Из СоответствиеУчастниковЭДО Цикл
				ПредставленияОтбора = ПредставленияОтбора + СтрШаблон(НСтр("ru = '%1 и %2'"),
					ЭлементСоответствия.Ключ, СтрСоединить(ЭлементСоответствия.Значение, "; ")) + Символы.ПС;
			КонецЦикла;
			
			ПредставлениеУчастниковЭДО = СтрШаблон(НСтр("ru = 'Только по выбранным участникам ЭДО:
				|%1'"), ПредставленияОтбора);
		Иначе
			ПредставлениеУчастниковЭДО = НСтр("ru = 'По всем организациям и контрагентам.'");
		КонецЕсли;
		
		ПредставлениеОграниченийОтправкиДанных = НСтр("ru = 'Отправлять данные:
		|[ПредставлениеУчастниковЭДО]'");
		
		ПредставлениеОграниченийОтправкиДанных = СтрЗаменить(ПредставлениеОграниченийОтправкиДанных, "[ПредставлениеУчастниковЭДО]", ПредставлениеУчастниковЭДО);
		
	КонецЕсли;
	
	Результат = НСтр("ru = '[ПредставлениеДокументов]
	|[ПредставлениеНормативноСправочнойИнформации]
	|
	|[ПредставлениеОграниченийОтправкиДанных]'");
	
	Результат = СтрЗаменить(Результат, "[ПредставлениеДокументов]", ПредставлениеДокументов);
	Результат = СтрЗаменить(Результат, "[ПредставлениеНормативноСправочнойИнформации]", ПредставлениеНормативноСправочнойИнформации);
	ОписаниеОграниченийПередачиДанных = СтрЗаменить(Результат, "[ПредставлениеОграниченийОтправкиДанных]", ПредставлениеОграниченийОтправкиДанных);
	
	Возврат ОписаниеОграниченийПередачиДанных;
	
КонецФункции

// Возвращает строку описания ограничений миграции данных для базы корреспондента, которая отображается пользователю.
// Прикладной разработчик на основе установленных отборов на узле базы корреспондента должен сформировать строку
// описания ограничений  удобную для восприятия пользователем.
// 
// Параметры:
//  НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена базы корреспондента.
//  ВерсияКорреспондента   - Строка    - версия корреспондента.
//  ИдентификаторНастройки - Строка    - идентификатор варианта настройки обмена.
// 
// Возвращаемое значение:
//	Строка - строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанныхБазыКорреспондента(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	ПредставлениеДокументов = "";
	ПредставлениеНормативноСправочнойИнформации = "";
	ПредставлениеОграниченийОтправкиДанных = "";
	
	ПредставлениеПериода = "";
	Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов) Тогда
		ПредставлениеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = ', начиная с %1'"),
		Формат(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов, "ДЛФ=DD"));
	Иначе
		ПредставлениеПериода = НСтр("ru = 'за весь период ведения учета в программе.'");
	КонецЕсли;
	
	ПредставлениеДокументыОтраженныеВБУ = "";
	Если НастройкаОтборовНаУзле.ПередаватьТолькоДокументыОтраженныеВБУ Тогда
		ПредставлениеДокументыОтраженныеВБУ = НСтр("ru = 'Только отраженные в бухгалтерском учете'");
	КонецЕсли;
	
	ПредставлениеДокументов = НСтр("ru = 'Отправлять документы[ПредставлениеПериода][ПредставлениеДокументыОтраженныеВБУ]'");
	ПредставлениеДокументов = СтрЗаменить(ПредставлениеДокументов, "[ПредставлениеПериода]", ПредставлениеПериода);
	ПредставлениеДокументов = СтрЗаменить(ПредставлениеДокументов, 
		"[ПредставлениеДокументыОтраженныеВБУ]", ПредставлениеДокументыОтраженныеВБУ);
	
	ПредставлениеНормативноСправочнойИнформации = НСтр("ru = 'Отправлять нормативно-справочную информацию, которая используется в отправляемых документах.'");
	
	ПредставлениеУчастниковЭДО = "";
	Если НастройкаОтборовНаУзле.ИспользоватьОтборПоУчастникамЭДО Тогда
		СоответствиеУчастниковЭДО = Новый Соответствие;
		МассивОрганизаций  = НастройкаОтборовНаУзле.УчастникиЭДО.Организация;
		МассивКонтрагентов = НастройкаОтборовНаУзле.УчастникиЭДО.Контрагент;
		Для Счетчик = 0 По МассивОрганизаций.Количество() - 1 Цикл
			Организация = МассивОрганизаций[Счетчик];
			Контрагенты = СоответствиеУчастниковЭДО.Получить(Организация);
			Если Контрагенты = Неопределено Тогда
				Контрагенты = Новый Массив;
				Контрагенты.Добавить(МассивКонтрагентов[Счетчик]);
				СоответствиеУчастниковЭДО.Вставить(Организация, Контрагенты);
			Иначе
				Контрагенты.Добавить(МассивКонтрагентов[Счетчик]);
			КонецЕсли;
		КонецЦикла;
		
		ПредставленияОтбора = "";
		Для Каждого ЭлементСоответствия Из СоответствиеУчастниковЭДО Цикл
			ПредставленияОтбора = ПредставленияОтбора + СтрШаблон(НСтр("ru = '%1 и %2'"),
				ЭлементСоответствия.Ключ, СтрСоединить(ЭлементСоответствия.Значение, "; ")) + Символы.ПС;
		КонецЦикла;
		
		ПредставлениеУчастниковЭДО = СтрШаблон(НСтр("ru = 'Только по выбранным участникам ЭДО:
			|%1'"), ПредставленияОтбора);
	Иначе
		ПредставлениеУчастниковЭДО = НСтр("ru = 'По всем организациям и контрагентам.'");
	КонецЕсли;
	
	ПредставлениеОграниченийОтправкиДанных = НСтр("ru = 'Отправлять данные:
	|[ПредставлениеУчастниковЭДО]'");
	ПредставлениеОграниченийОтправкиДанных = СтрЗаменить(ПредставлениеОграниченийОтправкиДанных,
		"[ПредставлениеУчастниковЭДО]", ПредставлениеУчастниковЭДО);
	
	Результат = НСтр("ru = '[ПредставлениеДокументов]
	|[ПредставлениеНормативноСправочнойИнформации]
	|
	|[ПредставлениеОграниченийОтправкиДанных]'");
	
	Результат = СтрЗаменить(Результат, "[ПредставлениеДокументов]", ПредставлениеДокументов);
	Результат = СтрЗаменить(Результат, "[ПредставлениеНормативноСправочнойИнформации]", ПредставлениеНормативноСправочнойИнформации);
	ОписаниеОграниченийПередачиДанныхБазыКорреспондента = СтрЗаменить(Результат,
		"[ПредставлениеОграниченийОтправкиДанных]", ПредставлениеОграниченийОтправкиДанных);
	
	Возврат ОписаниеОграниченийПередачиДанныхБазыКорреспондента;
	
КонецФункции

// Возвращает строку описания значений по умолчанию для базы корреспондента, которая отображается пользователю.
// Прикладной разработчик на основе установленных значений по умолчанию на узле базы корреспондента должен сформировать
// строку описания удобную для восприятия пользователем.
// 
// Параметры:
//  ЗначенияПоУмолчаниюНаУзле - Структура - структура значений по умолчанию на узле плана обмена базы корреспондента.
//  ВерсияКорреспондента      - Строка    - версия корреспондента.
//  ИдентификаторНастройки    - Строка    - идентификатор варианта настройки обмена.
// 
// Возвращаемое значение:
//  Строка - строка описания для пользователя значений по умолчанию.
//
Функция ОписаниеЗначенийПоУмолчаниюБазыКорреспондента(ЗначенияПоУмолчаниюНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	МассивОписаний = Новый Массив;
	
	МассивОписаний.Добавить(НСтр("ru = 'В документах поступления:'"));
	Если ЗначениеЗаполнено(ЗначенияПоУмолчаниюНаУзле.Склад) Тогда
		ОписаниеСклад = СтрШаблон(НСтр("ru = 'будет указан склад ""%1"";'"),
			Строка(ЗначенияПоУмолчаниюНаУзле.Склад));
	Иначе
		ОписаниеСклад = НСтр("ru = 'склад указан не будет.'");
	КонецЕсли;
	
	МассивОписаний.Добавить(ОписаниеСклад);
	
	Если ЗначенияПоУмолчаниюНаУзле.ЦенаВключаетНДС Тогда
		ОписаниеЦена = НСтр("ru = 'цена будет указана с учетом НДС.'");
	Иначе
		ОписаниеЦена = НСтр("ru = 'цена будет указана без учета НДС.'")
	КонецЕсли;
	
	МассивОписаний.Добавить(ОписаниеЦена);
	
	ОписаниеЗначенийПоУмолчаниюБазыКорреспондента = СтрСоединить(МассивОписаний, Символы.ПС);
	
	Возврат ОписаниеЗначенийПоУмолчаниюБазыКорреспондента;
	
КонецФункции

// Конец СтандартныеПодсистемы.ОбменДанными

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами.
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("Код");
	Результат.Добавить("НомерПринятого");
	Результат.Добавить("НомерОтправленного");
	
	Возврат Результат;
	
КонецФункции

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает массив используемых транспортов сообщений для этого плана обмена.
//
// 1. Например, если план обмена поддерживает только два транспорта сообщений FILE и FTP,
// то тело функции следует определить следующим образом:
//
//	Результат = Новый Массив;
//	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FILE);
//	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FTP);
//	Возврат Результат;
//
// 2. Например, если план обмена поддерживает все транспорты сообщений, определенных в конфигурации,
// то тело функции следует определить следующим образом:
//
//	Возврат ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();
//
// Возвращаемое значение:
//  Массив - массив содержит значения перечисления ВидыТранспортаСообщенийОбмена.
//
Функция ИспользуемыеТранспортыСообщенийОбмена()
	
	ИспользуемыеТранспортыСообщенийОбмена = Новый Массив;
	ИспользуемыеТранспортыСообщенийОбмена.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.COM);
	ИспользуемыеТранспортыСообщенийОбмена.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FILE);
	ИспользуемыеТранспортыСообщенийОбмена.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FTP);
	ИспользуемыеТранспортыСообщенийОбмена.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.EMAIL);
	Возврат ИспользуемыеТранспортыСообщенийОбмена;
	
КонецФункции

// Возвращает краткую информацию по обмену, выводимую при настройке синхронизации данных.
//
Функция КраткаяИнформацияПоОбмену(ИдентификаторНастройки)
	
	ПоясняющийТекст = НСтр("ru = 'Позволяет синхронизировать данные с программой ""Управление производственным предприятием, ред. 1.3"".
	|Из приложения ""Управление производственным предприятием"" в приложение ""Клиент ЭДО"" переносятся документы и все необходимые справочники
	|для создания исходящих электронных документов, а из приложения ""Клиент ЭДО"" в приложение ""Управление производственным предприятием"" -
	|документы и справочники для отражения входящих электронных документов в учете. Для получения более подробной информации нажмите на ссылку ""Подробное описание"".'");
	
	Возврат СтрЗаменить(ПоясняющийТекст, Символы.ПС, " ");
	
КонецФункции // КраткаяИнформацияПоОбмену()

// Возвращаемое значение: Строка - Ссылка на подробную информацию по настраиваемой синхронизации,
// в виде гиперссылки или полного пути к форме.
Функция ПодробнаяИнформацияПоОбмену(ИдентификаторНастройки)
	
	ПутьКИнформацииПоОбмену = "ПланОбмена.ОбменУправлениеПредприятиемКлиентЭДО.Форма.ПодробнаяИнформация";
	
	Возврат ПутьКИнформацииПоОбмену;
	
КонецФункции

// Возвращает структуру отборов на узле плана обмена с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//  ИдентификаторНастройки - Строка - идентификатор варианта настройки.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура значений по умолчанию на узле плана обмена.
// 
Функция НастройкаОтборовНаУзле(ИдентификаторНастройки) 
	
	СтруктураТабличнойЧастиУчастникиЭДО = Новый Структура;
	СтруктураТабличнойЧастиУчастникиЭДО.Вставить("Организация", Новый Массив);
	СтруктураТабличнойЧастиУчастникиЭДО.Вставить("Контрагент",  Новый Массив);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ДатаНачалаВыгрузкиДокументов",     ТекущаяДатаСеанса());
	СтруктураНастроек.Вставить("ИспользоватьОтборПоУчастникамЭДО", Ложь);
	СтруктураНастроек.Вставить("УчастникиЭДО",                     СтруктураТабличнойЧастиУчастникиЭДО);
	
	СтруктураНастроек.Вставить("РежимВыгрузкиДокументов",   Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию);
	СтруктураНастроек.Вставить("РежимВыгрузкиСправочников", Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает структуру отборов на узле плана обмена базы корреспондента с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//  ИдентификаторНастройки - Строка - идентификатор варианта настройки.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура отборов на узле плана обмена базы корреспондента.
// 
Функция НастройкаОтборовНаУзлеБазыКорреспондента(ИдентификаторНастройки) 
	
	СтруктураТабличнойЧастиОрганизации = Новый Структура;
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация",      Новый Массив);
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация_Ключ", Новый Массив);
	СтруктураТабличнойЧастиОрганизации.Вставить("Контрагент",       Новый Массив);
	СтруктураТабличнойЧастиОрганизации.Вставить("Контрагент_Ключ",  Новый Массив);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ДатаНачалаВыгрузкиДокументов", ТекущаяДатаСеанса());
	СтруктураНастроек.Вставить("ИспользоватьОтборПоУчастникамЭДО", Ложь);
	СтруктураНастроек.Вставить("ПередаватьТолькоДокументыОтраженныеВБУ", Ложь);
	СтруктураНастроек.Вставить("УчастникиЭДО", СтруктураТабличнойЧастиОрганизации);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает структуру значений по умолчанию для узла базы корреспондента;
// Структура настроек повторяет состав реквизитов шапки плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры.
// 
// Параметры:
//  ИдентификаторНастройки - Строка - идентификатор варианта настройки.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура значений по умолчанию на узле плана обмена базы корреспондента.
//
Функция ЗначенияПоУмолчаниюНаУзлеБазыКорреспондента(ИдентификаторНастройки) 
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("Склад",    "");
	СтруктураНастроек.Вставить("Склад_Ключ", "");
	СтруктураНастроек.Вставить("ЦенаВключаетНДС", Ложь);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает имена реквизитов и табличных частей плана обмена,
// перечисленных через запятую, которые являются общими для пары обменивающихся конфигураций.
// Например, если для плана обмена предусмотрено ограничение миграции данных по организациям в обе стороны,
// то табличная часть плана обмена, в которой перечислены разрешенные организации, считается общей.
// Возвращает пустую строку, если общие данные узлов не предусмотрены.
// 
Функция ОбщиеДанныеУзлов()
	
	Возврат "ДатаНачалаВыгрузкиДокументов, ИспользоватьОтборПоУчастникамЭДО, УчастникиЭДО";
	
КонецФункции

#КонецОбласти

#КонецЕсли

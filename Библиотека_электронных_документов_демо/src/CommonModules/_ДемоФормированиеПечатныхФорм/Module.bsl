
#Область ПрограммныйИнтерфейс

// Возвращает структуру данных со сводным описанием контрагента.
//
// Параметры: 
//  СписокСведений - СписокЗначений - список со значениями параметров организации
//                   формируется функцией СведенияОЮрФизЛице.
//  Список         - Строка  - список запрашиваемых параметров организации.
//  СПрефиксом     - Булево - признак выводить или нет префикс параметра организации.
//
// Возвращаемое значение:
//  Строка - описатель организации / контрагента / физ.лица.
//
Функция ОписаниеОрганизации(СписокСведений, Список = "", СПрефиксом = Истина) Экспорт

	Если ПустаяСтрока(Список) Тогда
		Список = "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет";
	КонецЕсли;

	Результат = "";

	СоответствиеПараметров = Новый Соответствие();
	СоответствиеПараметров.Вставить("ПолноеНаименование", " ");
	СоответствиеПараметров.Вставить("ИНН",                " ИНН ");
	СоответствиеПараметров.Вставить("КПП",                " КПП ");
	СоответствиеПараметров.Вставить("ЮридическийАдрес",   " ");
	СоответствиеПараметров.Вставить("ФактическийАдрес",   " ");
	СоответствиеПараметров.Вставить("Телефоны",           " тел.: ");
	СоответствиеПараметров.Вставить("НомерСчета",         " р/с ");
	СоответствиеПараметров.Вставить("Банк",               " в банке ");
	СоответствиеПараметров.Вставить("БИК",                " БИК ");
	СоответствиеПараметров.Вставить("КоррСчет",           " к/с ");
	СоответствиеПараметров.Вставить("КодПоОКПО",          " Код по ОКПО ");

	Список          = Список + ?(Прав(Список, 1) = ",", "", ",");
	ЧислоПараметров = СтрЧислоВхождений(Список, ",");

	Для Счетчик = 1 По ЧислоПараметров Цикл

		ПозЗапятой = СтрНайти(Список, ",");

		Если ПозЗапятой > 0  Тогда
			
			ИмяПараметра = Лев(Список, ПозЗапятой - 1);
			Список       = Сред(Список, ПозЗапятой + 1, СтрДлина(Список));

			Попытка
				СтрокаДополнения = "";
				СписокСведений.Свойство(ИмяПараметра, СтрокаДополнения);

				Если ПустаяСтрока(СтрокаДополнения) Тогда
					Продолжить;
				КонецЕсли;

				Префикс = СоответствиеПараметров[ИмяПараметра];
				Если Не ПустаяСтрока(Результат)  Тогда
					Результат = Результат + ",";
				КонецЕсли; 

				Результат = Результат + ?(СПрефиксом = Истина, Префикс, "") + СтрокаДополнения;
			Исключение
				
				ТекстСообщения  = НСтр("ru='Не удалось определить значение параметра организации: %ИмяПараметра%'");
				ТекстСообщения  = СтрЗаменить(ТекстСообщения,"%ИмяПараметра%",ИмяПараметра);
				Сообщение       = Новый СообщениеПользователю();
				Сообщение.Текст = ТекстСообщения;
				Сообщение.Сообщить();
				
			КонецПопытки;

		КонецЕсли;

	КонецЦикла;

	Возврат СокрЛП(Результат);

КонецФункции // ОписаниеОрганизации()

// Функция формирует сведения об указанном ЮрФизЛице. К сведениям относятся -
// наименование, адрес, номер телефона, банковские реквизиты.
//
// Параметры: 
//  ЮрФизЛицо - СправочникСсылка.Организации, СправочникСсылка.Контрагенты - организация или физическое лицо, о котором собираются сведения.
//  ДатаПериода - дата - дата на которую выбираются сведения о ЮрФизЛице.
//  ДляФизЛицаТолькоИнициалы - Булево - Для физ. лица выводить только инициалы имени и отчества.
//
// Возвращаемое значение:
//  Сведения - собранные сведения.
//
Функция СведенияОЮрФизЛице(ЮрФизЛицо, ДатаПериода, ДляФизЛицаТолькоИнициалы = Истина) Экспорт

	Сведения = Новый Структура("Представление, ПолноеНаименование, КодПоОКПО, ИНН, КПП, Телефоны, ЮридическийАдрес, Банк, БанкСсылка, БИК, КоррСчет, НомерСчета, СчетСсылка, Фамилия, Имя, Отчество");

	Если ЗначениеЗаполнено(ЮрФизЛицо)
	   И (ТипЗнч(ЮрФизЛицо) = Тип("СправочникСсылка.Организации")
		ИЛИ ТипЗнч(ЮрФизЛицо) = Тип("СправочникСсылка.Контрагенты")) Тогда
		
        Сведения.Вставить("ЮрФизЛицо", ЮрФизЛицо.ЮрФизЛицо);
        Сведения.Вставить("ПолноеНаименование", ЮрФизЛицо.Наименование);
		Сведения.Вставить("ОфициальноеНаименование", ЮрФизЛицо.Наименование);
		Сведения.Вставить("ИНН", ЮрФизЛицо.ИНН);
		Сведения.Вставить("КПП", ЮрФизЛицо.КПП);
		Сведения.Вставить("Телефоны", "8-495-257-08-58");
		
		Сведения.Вставить("КодПоОКПО", "24399828");
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	БанковскиеСчета.Ссылка КАК СчетСсылка,
		|	БанковскиеСчета.НомерСчета,
		|	БанковскиеСчета.Банк КАК БанкСсылка,
		|	БанковскиеСчета.Банк.Наименование КАК Банк,
		|	БанковскиеСчета.Банк.Код КАК БИК
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Владелец
		|	И НЕ БанковскиеСчета.ПометкаУдаления";
		Запрос.УстановитьПараметр("Владелец", ЮрФизЛицо);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Сведения, Выборка);
		КонецЕсли;
		
		Если ЮрФизЛицо.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель
		 ИЛИ ЮрФизЛицо.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		
		    НаименованиеФизЛица = СокрЛП(ЮрФизЛицо.Наименование);
		 	Если СтрНачинаетсяС(ВРег(НаименованиеФизЛица), "ИП ") Тогда
				НаименованиеФизЛица = Сред(НаименованиеФизЛица, 4);
			КонецЕсли;
		 	ФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(НаименованиеФизЛица);
			Сведения.Вставить("Фамилия", ФИО.Фамилия);
			Сведения.Вставить("Имя", ФИО.Имя);
			Сведения.Вставить("Отчество", ФИО.Отчество);
		КонецЕсли;
			
	КонецЕсли;
		
	Возврат Сведения;

КонецФункции // СведенияОЮрФизЛице()

// Стандартная для данной конфигурации функция форматирования сумм.
//
// Параметры: 
//  Сумма  - Число - которое мы хотим форматировать.
//  Валюта - СправочникСсылка.Валюты - ссылка на элемент справочника валют, если задан, то к в результирующую строку
//           будет добавлено представление валюты.
//  ЧН     - Строка - строка представляющая нулевое значение числа.
//  ЧРГ    - Строка - символ-разделитель групп целой части числа.
//
// Возвращаемое значение:
//  Строка - отформатированное должным образом строковое представление суммы.
//
Функция ФорматСумм(Знач Сумма, Валюта = Неопределено, ЧН = "", ЧРГ = "") Экспорт
	
	Сумма = ?(Сумма < 0, -Сумма, Сумма);
	ФорматнаяСтрока = "ЧЦ=15;ЧДЦ=2"
		+ ?(НЕ ЗначениеЗаполнено(ЧН), "", ";" + "ЧН=" + ЧН)
		+ ?(НЕ ЗначениеЗаполнено(ЧРГ),"", ";" + "ЧРГ=" + ЧРГ);
	РезультирующаяСтрока = СокрЛ(Формат(Сумма, ФорматнаяСтрока));
	
	Если ЗначениеЗаполнено(Валюта) Тогда
		РезультирующаяСтрока = РезультирующаяСтрока + " " + СокрП(Валюта);
	КонецЕсли;

	Возврат РезультирующаяСтрока;

КонецФункции // ФорматСумм()

// Формирует текст НДС по ставке для печатной формы счета и заказа.
//
// Параметры:
//  СтавкаНДС       - ПеречислениеСсылка.СтавкиНДС - ставка НДС, для которой необходимо сформировать текст.
//  ЦенаВключаетНДС - Булево - признак включения НДС в цену.
//
// Возвращаемое значение:
//  Строка - текст НДС.
//
Функция ТекстНДСПоСтавке(СтавкаНДС, ЦенаВключаетНДС) Экспорт
	
	Если СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		ТекстНДСПоСтавке = НСтр("ru = 'Без налога (НДС)'");
	Иначе
		ТекстНДСПоСтавке = ?(ЦенаВключаетНДС, НСтр("ru='В т.ч. НДС (%СтавкаНДС%):'"), НСтр("ru='НДС (%СтавкаНДС%):'"));
		ТекстНДСПоСтавке = СтрЗаменить(ТекстНДСПоСтавке, "%СтавкаНДС%", СтавкаНДС);
	КонецЕсли;
	
	Возврат ТекстНДСПоСтавке;
	
КонецФункции // ТекстНДСПоСтавке()

// Возвращает название дополнительной колонки.
//
// Возвращаемое значение:
//  Строка - имя дополнительной колонки.
//
Функция ИмяДополнительнойКолонки() Экспорт
	
	Возврат "Код";
	
КонецФункции

// Функция формирует представление суммы прописью в указанной валюте.
//
// Параметры:
//  Сумма - Число - сумма, которую надо представить прописью.
//  Валюта - СправочникСсылка.Валюты - валюта, в которой нужно представить сумму.
//  ВыводитьСуммуБезКопеек - Булево - флаг представления суммы без копеек.
//
// Возвращаемое значение:
//  Строка - сумма прописью.
//
Функция СформироватьСуммуПрописью(Знач Сумма, Валюта, ВыводитьСуммуБезКопеек = Ложь) Экспорт
	
	Результат         = ?(Сумма < 0, -Сумма, Сумма);
	ЦелаяЧасть        = Цел(Результат);
	ФорматСтрока      = "Л=ru_RU;ДП=Ложь";
	ПараметрыПредмета = Новый Структура("ПараметрыПрописиНаРусском", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	
	Если Результат = ЦелаяЧасть Тогда
		
		Если ВыводитьСуммуБезКопеек Тогда
			
			Результат = ЧислоПрописью(Результат, ФорматСтрока, ПараметрыПредмета.ПараметрыПрописиНаРусском);
			Результат = Лев(Результат, СтрНайти(Результат, "0") - 1);
			
		Иначе
			
			Результат = ЧислоПрописью(Результат, ФорматСтрока, ПараметрыПредмета.ПараметрыПрописиНаРусском);
			
		КонецЕсли;
		
	Иначе
		
		Результат = ЧислоПрописью(Результат, ФорматСтрока, ПараметрыПредмета.ПараметрыПрописиНаРусском);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
#Область ПрограммныйИнтерфейс

// См. ЭлектронноеВзаимодействиеПереопределяемый.ИзменитьСвойстваЭлементовФормы.
Процедура ИзменитьСвойстваЭлементовФормы(Форма, СтруктураПараметров) Экспорт
	
	Если СтруктураПараметров.Свойство("ВидОперации")
		И СтруктураПараметров.Свойство("ЗначениеПараметра") Тогда
		Если ВРег(СтруктураПараметров.ВидОперации) = ВРег("УстановкаГиперссылки")
			И СтруктураПараметров.Свойство("ТекстСостоянияЭДО") Тогда
			// Определим элемент формы.
			НайденныйЭлементФормы = Неопределено;
			Если ТипЗнч(Форма) = Тип("УправляемаяФорма") Тогда // только для управляемой формы
				Если НЕ Форма.Элементы.Найти("СостояниеЭДО") = Неопределено Тогда
					НайденныйЭлементФормы = Форма.Элементы.СостояниеЭДО;
				КонецЕсли;
				
				// Заполним свойство найденного элемента.
				Если НЕ НайденныйЭлементФормы = Неопределено
					И НайденныйЭлементФормы.Вид = ВидПоляФормы.ПолеНадписи Тогда
					НайденныйЭлементФормы.Гиперссылка = СтруктураПараметров.ЗначениеПараметра;
				КонецЕсли;
			Иначе // для обычной формы
				Если НЕ Форма.ЭлементыФормы.Найти("ТекстСостоянияЭДО") = Неопределено Тогда
					НайденныйЭлементФормы = Форма.ЭлементыФормы.ТекстСостоянияЭДО;
				КонецЕсли;
				
				// Заполним свойство найденного элемента.
				Если НЕ НайденныйЭлементФормы = Неопределено
					И ТипЗнч(НайденныйЭлементФормы) = Тип("Надпись") Тогда
					НайденныйЭлементФормы.Гиперссылка = СтруктураПараметров.ЗначениеПараметра;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьСоответствиеФункциональныхОпций.
Процедура ПолучитьСоответствиеФункциональныхОпций(СоответствиеФО) Экспорт
	
	СоответствиеФО.Вставить("ИспользоватьПартнеровИКонтрагентов", "_ДемоИспользоватьПартнеровИКонтрагентов");
	
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьСоответствиеНаименованийОбъектовМДИРеквизитов.
Процедура ПолучитьСоответствиеНаименованийОбъектовМДИРеквизитов(СоответствиеРеквизитовОбъекта) Экспорт
	
	// Обмен с банками начало
	СоответствиеРеквизитовОбъекта.Вставить("ПлатежноеПоручениеВМетаданных",      "_ДемоПлатежныйДокумент");
	СоответствиеРеквизитовОбъекта.Вставить("ПлатежноеТребованиеВМетаданных",     "_ДемоПлатежныйДокумент");
	СоответствиеРеквизитовОбъекта.Вставить("БанковскийСчетОрганизации",          "СчетОрганизации");
	СоответствиеРеквизитовОбъекта.Вставить("СокращенноеНаименованиеОрганизации", "Наименование");
	// Обмен с банками конец
	
	
	// Обмен с сайтами начало
	СоответствиеРеквизитовОбъекта.Вставить("ИННОрганизации",                       "ИНН");
	СоответствиеРеквизитовОбъекта.Вставить("КППОрганизации",                       "КПП");
	СоответствиеРеквизитовОбъекта.Вставить("ПолноеНаименованиеОрганизации",        "Наименование");
	СоответствиеРеквизитовОбъекта.Вставить("ЮридическоеФизическоеЛицо",            "ЮрФизЛицо");
	// Обмен с сайтами конец
	
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.СоответствиеКодовРеквизитовИПредставлений.
Процедура СоответствиеКодовРеквизитовИПредставлений(СоответствиеВозврата) Экспорт
	
	СоответствиеВозврата.Вставить("0261", НСтр("ru = 'Номер строки таблицы товаров'"));
	
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.НайтиСсылкуНаОбъект.
Процедура НайтиСсылкуНаОбъект(ТипОбъекта, Результат, ИдОбъекта = "", ДополнительныеРеквизиты = Неопределено, ИДЭД = Неопределено) Экспорт
	
	Если ТипОбъекта = "_ДемоПартнеры" И ЗначениеЗаполнено(ДополнительныеРеквизиты) Тогда
		
		Контрагент = "";
		Если ДополнительныеРеквизиты.Свойство("Контрагент", Контрагент) И ЗначениеЗаполнено(Контрагент) Тогда
			Если Контрагент.Метаданные().Реквизиты.Найти("Партнер") <> Неопределено Тогда
			
				Результат = Контрагент["Партнер"];
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьСоответствиеСправочников.
Процедура ПолучитьСоответствиеСправочников(СоответствиеСправочников) Экспорт
	
	СоответствиеСправочников.Вставить("Партнеры",                    "_ДемоПартнеры");
	СоответствиеСправочников.Вставить("ХарактеристикиНоменклатуры",  "ХарактеристикиНоменклатуры");
	
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ИзменитьСообщениеОбОшибке.
Процедура ИзменитьСообщениеОбОшибке(КодОшибки, ТекстОшибки) Экспорт
	
	Если КодОшибки = "100" ИЛИ КодОшибки = "110" Тогда
		ТекстОшибки = НСтр("ru = 'Проверьте общие настройки криптографии.'");
	КонецЕсли;
	
КонецПроцедуры

// См. ЭлектронноеВзаимодействиеПереопределяемый.ПроверитьГотовностьИсточников.
Процедура ПроверитьГотовностьИсточников(ДокументыМассив) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти
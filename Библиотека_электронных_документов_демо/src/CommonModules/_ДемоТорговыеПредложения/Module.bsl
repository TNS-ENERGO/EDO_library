////////////////////////////////////////////////////////////////////////////////
// Подсистема "Торговые предложения".
// ОбщийМодуль._ДемоТорговыеПредложения.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// См. ТорговыеПредложенияПереопределяемый.ЗаполнитьПакетПредложений
Процедура ЗаполнитьПакетПредложений(Знач ТорговоеПредложение, ПакетПредложений) Экспорт
	
	// Заполнение общих реквизитов
	Реквизиты = "Организация, Валюта";
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТорговоеПредложение, Реквизиты);
	ЗаполнитьЗначенияСвойств(ПакетПредложений, ЗначенияРеквизитов);
	ПакетПредложений.ЦенаВключаетНДС = Истина;
	
	// Заполнение контактной информации.
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗначенияРеквизитов.Организация, "ИНН, КПП");
	
	ПакетПредложений.КонтактыОрганизации.ИНН = РеквизитыОрганизации.ИНН;
	ПакетПредложений.КонтактыОрганизации.КПП = ?(ПустаяСтрока(РеквизитыОрганизации.КПП), "0", РеквизитыОрганизации.КПП);
	
	ПакетПредложений.КонтактыОрганизации.Телефон          = "(495)1234567";
	ПакетПредложений.КонтактыОрганизации.ЭлектроннаяПочта = "bn@1c.ru";
	ПакетПредложений.КонтактыОрганизации.Сайт             = "https://1cbn.ru/";
	
	ПакетПредложений.КонтактноеЛицо.ФИО              = НСтр("ru = 'Иванов И.И.'");
	ПакетПредложений.КонтактноеЛицо.Телефон          = "(495)1234567";
	ПакетПредложений.КонтактноеЛицо.ЭлектроннаяПочта = "bn@1c.ru";
	
	// Заполнение контрагентов.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_ДемоСоглашенияСКлиентамиКонтрагенты.Контрагент КАК Контрагент,
	|	_ДемоСоглашенияСКлиентамиКонтрагенты.Контрагент.ИНН КАК ИНН,
	|	_ДемоСоглашенияСКлиентамиКонтрагенты.Контрагент.КПП КАК КПП
	|ИЗ
	|	Справочник._ДемоСоглашенияСКлиентами.Контрагенты КАК _ДемоСоглашенияСКлиентамиКонтрагенты
	|ГДЕ
	|	_ДемоСоглашенияСКлиентамиКонтрагенты.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ТорговоеПредложение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.ИНН) Тогда
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ПакетПредложений.СписокКонтрагентов.Добавить(), Выборка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	ТорговыеПредложенияПереопределяемый.ПолучитьТекстЗапросаПубликуемыхТоваров(Запрос.Текст, Истина, Истина);
	Запрос.УстановитьПараметр("ТорговоеПредложение", ТорговоеПредложение);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());

	// Дополнение в запрос источников по дополнительным реквизитам номенклатуры.
	ДополнитьЗапросПолучениемРеквизитовНоменклатуры(Запрос);
	
	ПакетЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаТовары    = ПакетЗапроса[ПакетЗапроса.Количество() - 4].Выбрать(); // Товары.
	АтрибутыТоваров  = ПакетЗапроса[ПакетЗапроса.Количество() - 2].Выгрузить(); // Свойства товаров.
	ШтрихкодыТоваров = ПакетЗапроса[ПакетЗапроса.Количество() - 1].Выгрузить(); // Штрих-коды товаров.
	
	СтартерСлучайногоЧисла = Формат(ТекущаяДатаСеанса(),"ДФ=ddMMyyyyhhmmss");
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		СтрокаТоваров = ПакетПредложений.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоваров, ВыборкаТовары);
		
		// Формирование атрибутов.
		СтрокиАтрибутов = АтрибутыТоваров.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", 
			ВыборкаТовары.Номенклатура, ВыборкаТовары.Характеристика));
		ТаблицаАтрибутов = ПакетПредложений.Атрибуты.Скопировать();
		ТаблицаАтрибутов.Очистить();
		Для каждого СтрокаАтрибутов Из СтрокиАтрибутов Цикл
			НоваяСтрокаАтрибутов = ТаблицаАтрибутов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаАтрибутов, СтрокаАтрибутов);
			Если ТипЗнч(НоваяСтрокаАтрибутов.Значение) = Тип("Число") Тогда
				НоваяСтрокаАтрибутов.Значение = XMLСтрока(НоваяСтрокаАтрибутов.Значение); // Конвертация в строку.
			Иначе
				НоваяСтрокаАтрибутов.Значение = Строка(НоваяСтрокаАтрибутов.Значение);
			КонецЕсли;
		КонецЦикла;
		СтрокаТоваров.Атрибуты = ТаблицаАтрибутов;
		// Конец Формирование атрибутов.
		
		// Демонстрация заполнения остатков случайными значениями.
		Генератор = Новый ГенераторСлучайныхЧисел(СтартерСлучайногоЧисла);
		СтартерСлучайногоЧисла = СтартерСлучайногоЧисла + Генератор.СлучайноеЧисло(1,10);
		СтрокаТоваров.Остаток = Генератор.СлучайноеЧисло(0, 3); // Нет, Мало, Достаточно, Много.
		
		// Формирование штрихкодов.
		СтрокиШтрихкодов = ШтрихкодыТоваров.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, ЕдиницаИзмерения", 
			ВыборкаТовары.Номенклатура, ВыборкаТовары.Характеристика, ВыборкаТовары.ЕдиницаИзмерения));
		ТаблицаШтрихкодов = ПакетПредложений.Штрихкоды.Скопировать();
		ТаблицаШтрихкодов.Очистить();
		Для каждого СтрокаШтрихкода Из СтрокиШтрихкодов Цикл
			НоваяСтрокаШтрихкодов = ТаблицаШтрихкодов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаШтрихкодов, СтрокаШтрихкода);
		КонецЦикла;
		СтрокаТоваров.Штрихкоды = ТаблицаШтрихкодов;
		// Конец Формирование штрихкодов.
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Дополнение в запрос источников по дополнительным реквизитам номенклатуры.
//
// Параметры:
//   Запрос - Запрос - основной запрос сбора данных.
//
Процедура ДополнитьЗапросПолучениемРеквизитовНоменклатуры(Запрос)
	
	// См. блок запроса в ТорговыеПредложенияПереопределяемый.ПолучитьТекстЗапросаПубликуемыхТоваров.
	БлокРеквизитовШаблон = "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.ОбъектСопоставления,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	СоответствиеРеквизитовБизнесСеть.ПредставлениеРеквизитаКатегории,
	|	СоответствиеРеквизитовБизнесСеть.ИдентификаторРеквизитаКатегории,
	|	&Свойство,
	|	&Значение
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеРеквизитовБизнесСеть КАК СоответствиеРеквизитовБизнесСеть
	|		ПО Товары.ОбъектСопоставления = СоответствиеРеквизитовБизнесСеть.ОбъектСопоставления
	|			И (СоответствиеРеквизитовБизнесСеть.РеквизитОбъекта = &Свойство)
	|";
	
	ДоступныеДляПубликацииРеквизиты = Новый Соответствие;
	ТорговыеПредложенияПереопределяемый.ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации(ДоступныеДляПубликацииРеквизиты);
	
	МассивПодзапросов = Новый Массив;
	СчетчикРеквизитов = 0;
	Для каждого СвойстваРеквизита Из ДоступныеДляПубликацииРеквизиты Цикл
		
		ИндексСтрокой = XMLСтрока(СчетчикРеквизитов);
		
		СчетчикРеквизитов = СчетчикРеквизитов + 1;
		ТекстПодзапроса = БлокРеквизитовШаблон;
		
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "&Значение", СвойстваРеквизита.Значение.ПутьКДанным);
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "&Свойство", "&Свойство" + ИндексСтрокой);
		
		Запрос.УстановитьПараметр("Свойство" + ИндексСтрокой, СвойстваРеквизита.Ключ);
		
		Если СвойстваРеквизита.Значение.Свойство("ПустоеЗначение") Тогда
			ТекстПодзапроса = ТекстПодзапроса + Символы.ПС
				+ "ГДЕ НЕ "+ СвойстваРеквизита.Значение.ПутьКДанным + " = &ПустоеЗначение" + ИндексСтрокой;
			Запрос.УстановитьПараметр("ПустоеЗначение" + ИндексСтрокой,
				СвойстваРеквизита.Значение.ПустоеЗначение);
		КонецЕсли;
		
		МассивПодзапросов.Добавить(ТекстПодзапроса);
		
	КонецЦикла;
	
	БлокРеквизитовПодстановка = СтрСоединить(МассивПодзапросов, Символы.ПС);
	
	// Если реквизиты не найдены, то возврат.
	Если ПустаяСтрока(БлокРеквизитовПодстановка) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрЧислоВхождений(Запрос.Текст, БлокРеквизитовШаблон) = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка компоновки запроса получения данных номенклатуры.'");
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, БлокРеквизитовШаблон, БлокРеквизитовПодстановка);
	
КонецПроцедуры

#КонецОбласти
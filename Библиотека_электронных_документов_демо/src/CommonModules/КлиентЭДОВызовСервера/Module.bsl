#Область ПрограммныйИнтерфейс

// Устанавливает специальный интерфейс начала работы.
//
Процедура УстановитьИнтерфейсНачалаРаботы() Экспорт
	
	Настройки = Новый НастройкиИнтерфейсаКлиентскогоПриложения;
	НастройкиСостава = Новый НастройкиСоставаИнтерфейсаКлиентскогоПриложения;
	Настройки.УстановитьСостав(НастройкиСостава);
	ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиИнтерфейсаКлиентскогоПриложения", "", Настройки);
	
	Форма = "Обработка.НачалоРаботыКЭДО.Форма.БыстрыйСтарт";
	
	НачальнаяСтраница = Новый НастройкиНачальнойСтраницы;
	СоставФорм = Новый СоставФормНачальнойСтраницы;
	СоставФорм.ЛеваяКолонка.Добавить(Форма);
	НачальнаяСтраница.УстановитьСоставФорм(СоставФорм);
	
	ПараметрыКлиента = СтандартныеПодсистемыСервер.ПараметрыКлиентаНаСервере();
	Если ПараметрыКлиента.Получить("СкрытьРабочийСтолПриНачалеРаботыСистемы") = Истина Тогда
		// В БСП форма на рабочем столе уже подменена.
		// Поэтому запишем форму для начала работы в настройки, из которых БСП будет восстанавливать эту форму.
		СохраняемыеНастройки = Новый ХранилищеЗначения(НачальнаяСтраница);
		ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиНачальнойСтраницыПередОчисткой", "", СохраняемыеНастройки);
	Иначе
		ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиНачальнойСтраницы", "", НачальнаяСтраница);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает стандартный интерфейс клиентского приложения.
//
Процедура УстановитьСтандартныйИнтерфейс() Экспорт
	
	Настройки = Новый НастройкиИнтерфейсаКлиентскогоПриложения;
	НастройкиСостава = Новый НастройкиСоставаИнтерфейсаКлиентскогоПриложения;
	
	НастройкиСостава.Верх.Добавить(Новый ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения("ПанельОткрытых"));
	Лево = Новый ГруппаНастройкиСоставаИнтерфейсаКлиентскогоПриложения;
	Лево.Добавить(Новый ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения("ПанельИнструментов"));
	Лево.Добавить(Новый ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения("ПанельРазделов"));
	НастройкиСостава.Лево.Добавить(Лево);
	
	Настройки.УстановитьСостав(НастройкиСостава);
	ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиИнтерфейсаКлиентскогоПриложения", "", Настройки);
	
	НачальнаяСтраница = Новый НастройкиНачальнойСтраницы;
	СоставФорм = Новый СоставФормНачальнойСтраницы;
	СоставФорм.ЛеваяКолонка.Добавить("Обработка.ТекущиеДелаПоЭДО.Форма.ТекущиеДела");
	НачальнаяСтраница.УстановитьСоставФорм(СоставФорм);
	ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиНачальнойСтраницы", "", НачальнаяСтраница);
	
КонецПроцедуры

// Записывает сопоставление номенклатуры поставщика в информационную базу.
//
// Параметры:
//  НоменклатураПоставщика	 - СправочникСсылка.НоменклатураПоставщиков - Номенклатура поставщика для сопоставления.
//  ЗначенияРеквизитов		 - Структура - Данные сопоставления для записи.
//  Замещать				 - Булево - Признак замещения существующего сопоставления.
// 
// Возвращаемое значение:
//  Булево - Результат записи сопоставления.
//
Функция ЗаписатьСопоставлениеНоменклатурыПоставщика(Знач НоменклатураПоставщика, Знач ЗначенияРеквизитов, Знач Замещать = Ложь) Экспорт
	
	ПараметрыВыполнения = Новый Структура;
	
	СправочникОбъект = НоменклатураПоставщика.ПолучитьОбъект();
	Если НЕ Замещать И ЗначениеЗаполнено(СправочникОбъект.Номенклатура) Тогда
		Возврат СправочникОбъект.Номенклатура = ЗначенияРеквизитов.Номенклатура;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СправочникОбъект, ЗначенияРеквизитов);
	СправочникОбъект.Записать();
	Возврат Истина;
	
КонецФункции

// Переопределяет получение формы счета-фактуры.
//
// Параметры:
//  ВидФормы				 - Строка - Имя стандартной формы.
//  Параметры				 - Структура - Параметры формы.
//  ВыбраннаяФорма			 - Строка - Имя открываемой формы.
//  ДополнительнаяИнформация - Структура - Дополнительная информация открытия формы.
//  СтандартнаяОбработка	 - Булево - Признак отказа от выполнения операции.
//
Процедура ОбработкаПолученияФормыСчетаФактуры(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	Если ВидФормы = "ФормаСписка"
		ИЛИ ВидФормы = "ФормаВыбора" Тогда
		Возврат;
	КонецЕсли;
	
	ВидДокумента = Неопределено;
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидДокумента");
		
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Если Параметры.ЗначенияЗаполнения.Свойство("ВидДокумента") Тогда
			ВидДокумента = Параметры.ЗначенияЗаполнения.ВидДокумента;
		ИначеЕсли Параметры.ЗначенияЗаполнения.Свойство("Основание")
			И ТипЗнч(Параметры.ЗначенияЗаполнения.Основание) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			ВидДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ЗначенияЗаполнения.Основание, "ВидДокумента");
		КонецЕсли;
		
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ВидДокумента = Параметры.ЗначениеКопирования.ВидДокумента;
		
	КонецЕсли;
	
	Если ВидДокумента = Перечисления.ВидыДокументов.СчетФактураНаАванс Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ФормаДокументаНаАванс";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания; 

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаИНН");
	Иначе
		ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаПодключениеИнтернетПоддержки");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ЛогинПарольИПП = ИнтернетПоддержкаПользователей.ДанныеАутентификацииПользователяИнтернетПоддержки();
	УстановитьПривилегированныйРежим(Ложь);
	Если ЛогинПарольИПП <> Неопределено Тогда
		ЛогинИнтернетПоддержки  = ЛогинПарольИПП.Логин;
		ПарольИнтернетПоддержки = ЛогинПарольИПП.Пароль;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		
		ЗавершитьРаботуПомощника();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГиперссылкаВосстановлениеПароляНажатие(Элемент)
	
	ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницу(
		ИнтернетПоддержкаПользователейКлиентСервер.URLСтраницыСервисаLogin("/remind_request"),
		НСтр("ru = 'Восстановление пароля'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаРегистрацияНажатие(Элемент)
	
	ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницу(
		ИнтернетПоддержкаПользователейКлиентСервер.URLСтраницыСервисаLogin("/registration"),
		НСтр("ru = 'Регистрация'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПодключитьсяПозжеНажатие(Элемент)
	
	ЗавершитьРаботуПомощника();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаЗаполнитьПозжеНажатие(Элемент)
	
	ЗавершитьРаботуПомощника();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключиться(Команда)
	
	Если Не ЗначениеЗаполнено(ЛогинИнтернетПоддержки) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите логин'"),, "ЛогинИнтернетПоддержки");
		
		Возврат;
		
	ИначеЕсли Не ЗначениеЗаполнено(ПарольИнтернетПоддержки) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите пароль'"),, "ПарольИнтернетПоддержки");
		
		Возврат;
		
	КонецЕсли;
	
	ПодключитьИнтернетПоддержку();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьСИНН(Команда)
	
	Если ПроверитьЗаполнениеИНН() Тогда
		СоздатьОрганизацию();
		ОткрытьПомощникПодключенияКСервису1СЭДО();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПерейтиНаСтраницу(Форма, АктивнаяСтраница)
	
	Элементы = Форма.Элементы;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[АктивнаяСтраница];
	
	Для Каждого Страница Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		Страница.Видимость = Страница = Элементы[АктивнаяСтраница];
	КонецЦикла;
	
	Если АктивнаяСтраница = "СтраницаПодключениеИнтернетПоддержки" Тогда
		
		Элементы.Подключиться.КнопкаПоУмолчанию = Истина;
		Элементы.ГруппаОжиданиеПодключения.Видимость = Ложь;
		Форма.ТекущийЭлемент = Элементы.ЛогинИнтернетПоддержки;
		
	ИначеЕсли АктивнаяСтраница = "СтраницаИНН" Тогда
		
		Элементы.ПродолжитьСИНН.КнопкаПоУмолчанию = Истина;
		Форма.ТекущийЭлемент = Элементы.ИНН;
		
	КонецЕсли;
	
	Элементы.ГруппаОжидание.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКомментарийНекорректныйИНН()
	
	ИННКомментарий = Новый ФорматированнаяСтрока(НСтр("ru='ИНН некорректный. Опечатка?'"),, Новый Цвет(255,0,0));	
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьКомментарийНекорректныйИНН()
	
	УстановитьКомментарийНекорректныйИНН();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
			ЗавершитьРаботуПомощника();
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьВыполнениеЗадания", 
				ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
				Истина);
		КонецЕсли;
	Исключение
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ИзменитьТекстСообщенияОжидания()
	
	Элементы.ТекстОжидания.Заголовок = НСтр("ru='Еще чуть-чуть...'");
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеИНН()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(ИНН) Тогда
		
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", НСтр("ru='ИНН'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,, "ИНН", Отказ);
		
	Иначе
		
		Если СтрДлина(ИНН) <> 10 И СтрДлина(ИНН) <> 12 Тогда
			
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", НСтр("ru='ИНН'"),,, 
				НСтр("ru='ИНН должен состоять из 10 или 12 цифр.'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,, "ИНН", Отказ);
			
		Иначе
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ИНН.ОтметкаНезаполненного = Отказ;
	
	Возврат НЕ Отказ;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_СоздатьОрганизацию()
	
	Если Реквизиты = Неопределено Тогда
		Реквизиты = ПолучитьРеквизитыПоИНН(ИНН, ЭтоЮрЛицо(ИНН));
	КонецЕсли;
	
	РезультатВыполнения = СоздатьОрганизациюНаСервере();
	Если НЕ РезультатВыполнения.ЗаданиеВыполнено Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	Иначе
		ЗавершитьРаботуПомощника();
	КонецЕсли
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыПоИНН(ИНН, ЭтоЮрЛицо)
	
	Результат = Неопределено;
	
	Если ЭтоЮрЛицо Тогда
		Результат = РаботаСКонтрагентами.РеквизитыЮридическогоЛицаПоИНН(ИНН);
	Иначе
		Результат = РаботаСКонтрагентами.РеквизитыПредпринимателяПоИНН(ИНН);
	КонецЕсли;
	
	Результат.Вставить("ЮридическоеФизическоеЛицо", 
		?(ЭтоЮрЛицо, 
			Перечисления.ЮрФизЛицо.ЮрЛицо, 
			Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель));
			
	Результат.Вставить("ОГРН", Результат.РегистрационныйНомер);
	
	Если Результат.Свойство("ИсторияРеквизитов") Тогда
		Результат.Удалить("ИсторияРеквизитов");
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоЮрЛицо(ИНН)
	
	Возврат СтрДлина(ИНН) = 10;
	
КонецФункции

&НаСервере
Функция СоздатьОрганизациюНаСервере()
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьЭлементовОжиданияПодключения(Ожидание)
	
	Элементы.ГруппаПодключиться.Доступность         = НЕ Ожидание;
	Элементы.Подключиться.Видимость                 = НЕ Ожидание;
	Элементы.ГиперссылкаПодключитьсяПозже.Видимость = НЕ Ожидание;
	Элементы.ГруппаОжиданиеПодключения.Видимость    = Ожидание;
	
КонецПроцедуры

&НаКлиенте
Функция ПодключитьИнтернетПоддержку()
	
	УстановитьДоступностьЭлементовОжиданияПодключения(Истина);
	
	Элементы.ГруппаОшибкаПодключения.Видимость = Ложь;
	
	ДлительнаяОперация = ПодключитсяКИнтернетПоддержкеНаСервере();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецФункции

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда 
		УстановитьДоступностьЭлементовОжиданияПодключения(Ложь);
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		УстановитьДоступностьЭлементовОжиданияПодключения(Ложь);
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	РезультатПодключения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	Если РезультатПодключения = "ПодключениеУспешно" Тогда 
		// Переходим к вводу ИНН
		ПерейтиНаСтраницу(ЭтотОбъект, "СтраницаИНН");
		
	ИначеЕсли РезультатПодключения = "Сервис1СКонтрагентНеПодключен" Тогда
		// Закрываем окно и начинаем работу
		
		ОбновитьИнтерфейс();
		
	Иначе
		// Произошла ошибка
		УстановитьДоступностьЭлементовОжиданияПодключения(Ложь);
		
		Если РезультатПодключения = "ОшибкаАвторизации" Тогда
			
			ТекстОшибкиПодключения = Новый ФорматированнаяСтрока(
				НСтр("ru = 'Неверный логин или пароль. Укажите правильные данные для авторизации.'"));
			
		Иначе
			
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить(НСтр("ru = 'При подключении к сервису возникла ошибка. Возможно, указаны неверные настройки'") + " ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'прокси-сервера'"),,,, "e1cib/app/ОбщаяФорма.ПараметрыПроксиСервера"));
			МассивСтрок.Добавить(". " + НСтр("ru = 'Подробности в'") + " ");
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'журнале регистрации'"),,,, "e1cib/app/Обработка.ЖурналРегистрации"));
			МассивСтрок.Добавить(".");
			ТекстОшибкиПодключения = Новый ФорматированнаяСтрока(МассивСтрок);
			
		КонецЕсли;
		
		Элементы.ГруппаОшибкаПодключения.Видимость = Истина;
		Элементы.ТекстОшибкиПодключения.Заголовок = ТекстОшибкиПодключения;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодключитсяКИнтернетПоддержкеНаСервере()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение регистрационных данных из веб-сервиса'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	ПараметрыЗадания = Новый Структура("ЛогинИПП, ПарольИПП", ЛогинИнтернетПоддержки, ПарольИнтернетПоддержки);
	
	Результат = ДлительныеОперации.ВыполнитьВФоне("Обработки.НачалоРаботыКЭДО.ПодключитьИнтернетПоддержку",
		ПараметрыЗадания, ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьРаботуПомощника()
	
	КлиентЭДОВызовСервера.УстановитьСтандартныйИнтерфейс();
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОрганизацию()
	
	Элементы.ГруппаОжидание.Видимость = Истина;
	
	ПодключитьОбработчикОжидания("Подключаемый_СоздатьОрганизацию", 0.1, Истина);
	
	ПодключитьОбработчикОжидания("Подключаемый_ИзменитьТекстСообщенияОжидания", 10, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПомощникПодключенияКСервису1СЭДО()
	
	СпособыОЭД = Новый Массив;
	СпособыОЭД.Добавить(ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СпособыОбменаЭД", СпособыОЭД);
	ОткрытьФорму("Справочник.ПрофилиНастроекЭДО.Форма.ПомощникПодключенияЭДО", ПараметрыФормы,,,Окно);
	
КонецПроцедуры

#КонецОбласти

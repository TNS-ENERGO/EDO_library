#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции
// Выполняет загрузку данных для перехода с других конфигураций "1С:Предприятие 8".
// 
// Параметры:
//   ПараметрыЗагрузки - Структура - параметры загрузки данных.
//   АдресХранилища    - Строка    - Адрес хранилища для помещения результата загрузки данных.
//
Процедура ЗагрузитьДанные(ПараметрыЗагрузки, АдресХранилища) Экспорт
	
	Результаты = Новый Массив;
	
	ИмяФайлаАрхива = ПолучитьИмяВременногоФайла("zip");
	КаталогДляИзвлечения = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ПолучитьИмяВременногоФайла());
	
	ПараметрыЗагрузки.ДанныеДляЗагрузки.Записать(ИмяФайлаАрхива);
	
	Архив = Новый ЧтениеZipФайла(ИмяФайлаАрхива);
	
	Для Каждого ЭтапЗагрузки Из ПараметрыЗагрузки.ЭтапыЗагрузки Цикл
		
		ОбъектОбработки = ЭтапЗагрузки.Значение;
		
		ЭлементАрхива = Архив.Элементы.Найти(ОбъектОбработки.ИмяФайлаДляЗагрузки);
		Если ЭлементАрхива = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяВременногоФайлаПротокола = ПолучитьИмяВременногоФайла("txt");
		ИмяВременногоФайлаПравил    = "";
		
		РезультатВыполнения = Новый Структура;
		РезультатВыполнения.Вставить("ОписаниеЭтапа",            ОбъектОбработки.ПредставлениеЭтапа);
		РезультатВыполнения.Вставить("ТекстСообщения",           "");
		РезультатВыполнения.Вставить("Ошибка",                   Ложь);
		РезультатВыполнения.Вставить("ПротоколОбмена",           Новый ТекстовыйДокумент);
		РезультатВыполнения.Вставить("НачалоПериодаВыгрузки",    '00010101');
		РезультатВыполнения.Вставить("ОкончаниеПериодаВыгрузки", '00010101');
		
		ОбработкаОбмена = Обработки.УниверсальныйОбменДаннымиXML.Создать();

		ОбработкаОбмена.РежимОбмена = "Загрузка";
		ОбработкаОбмена.РежимОтладкиАлгоритмов = 1;
		ОбработкаОбмена.ВыводВОкноСообщенийИнформационныхСообщений = Ложь;
		ОбработкаОбмена.НеВыводитьНикакихИнформационныхСообщенийПользователю = Истина;
		ОбработкаОбмена.ВыводВПротоколИнформационныхСообщений      = Не ПараметрыЗагрузки.АвтоТестОбмена;
		ОбработкаОбмена.ВыводВПротоколСообщенийОбОшибках           = Истина;
		ОбработкаОбмена.ИмяФайлаПротоколаОбмена                    = ИмяВременногоФайлаПротокола;
		
		Если ПараметрыЗагрузки.БезопаснаяЗагрузка Тогда
			ИмяВременногоФайлаПравил = ПолучитьИмяВременногоФайла("xml");
			
			МакетПравил = Обработки.ПомощникПереходаСДругихКонфигураций.ПолучитьМакет(ОбъектОбработки.ИмяМакетаПравил);
			МакетПравил.Записать(ИмяВременногоФайлаПравил);
			
			ОбработкаОбмена.БезопаснаяЗагрузка   = Истина;
			ОбработкаОбмена.ИмяФайлаПравилОбмена = ИмяВременногоФайлаПравил;
		КонецЕсли;
		
		Попытка
			Архив.Извлечь(ЭлементАрхива, КаталогДляИзвлечения);
		Исключение
			РезультатВыполнения.ТекстСообщения = НСтр("ru = 'При извлечении данных из архива произошла ошибка'") + ":" + Символы.ПС
				+ ОписаниеОшибки() + ".";
				
			РезультатВыполнения.Ошибка = Истина;
		КонецПопытки;
		
		ОбработкаОбмена.ИмяФайлаОбмена = КаталогДляИзвлечения + ЭлементАрхива.Имя;
		
		Если Не РезультатВыполнения.Ошибка Тогда
			Попытка
				ОбработкаОбмена.ОткрытьФайлЗагрузки(Истина);
			Исключение
				РезультатВыполнения.ТекстСообщения = НСтр("ru = 'При чтении данных произошла ошибка'") + ":" + Символы.ПС
					+ ОписаниеОшибки() + НСтр("ru = 'Ошибка в формате файла данных'") + ".";
					
				РезультатВыполнения.Ошибка = Истина;
			КонецПопытки;
		КонецЕсли;
		
		Если Не РезультатВыполнения.Ошибка Тогда
			
			Если Не ОбработкаОбмена.мБылиПрочитаныПравилаОбменаПриЗагрузке Тогда
				
				РезультатВыполнения.ТекстСообщения = НСтр("ru = 'При чтении данных произошла ошибка'") + ".";
				РезультатВыполнения.Ошибка         = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не РезультатВыполнения.Ошибка Тогда
			
			Попытка
				
				ОбработкаОбмена.ВыполнитьЗагрузку();
				
			Исключение
				
				РезультатВыполнения.ТекстСообщения = НСтр("ru = 'При загрузке данных произошла ошибка'") + ":" + Символы.ПС
					+ ОписаниеОшибки() + ".";
					
				РезультатВыполнения.Ошибка = Истина;
				
			КонецПопытки;
			
		КонецЕсли;
		
		Если Не РезультатВыполнения.Ошибка Тогда
			
			Если ОбработкаОбмена.ФлагОшибки Тогда
				
				РезультатВыполнения.ТекстСообщения = НСтр("ru = 'При загрузке данных произошла ошибка'") + ".";
				РезультатВыполнения.Ошибка         = Истина;
				
			Иначе
				
				РезультатВыполнения.ТекстСообщения = НСтр("ru = 'Загрузка данных завершена'") + ".";
				РезультатВыполнения.Ошибка         = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
		РезультатВыполнения.НачалоПериодаВыгрузки    = ОбработкаОбмена.ДатаНачала;
		РезультатВыполнения.ОкончаниеПериодаВыгрузки = ОбработкаОбмена.ДатаОкончания;
		
		РезультатВыполнения.ПротоколОбмена.Прочитать(ОбработкаОбмена.ИмяФайлаПротоколаОбмена);
		Результаты.Добавить(РезультатВыполнения);
		
		УдалитьФайлы(ИмяВременногоФайлаПротокола);
		Если Не ПустаяСтрока(ИмяВременногоФайлаПравил) Тогда
			УдалитьФайлы(ИмяВременногоФайлаПравил);
		КонецЕсли;
		
	КонецЦикла;
	
	УдалитьФайлы(ИмяФайлаАрхива);
	УдалитьФайлы(КаталогДляИзвлечения);
	
	ПоместитьВоВременноеХранилище(Результаты, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	РаботаСНоменклатурой.ПриСозданииНаСервереФормаСпискаНоменклатуры(ЭтотОбъект, ЭтотОбъект.КоманднаяПанель);
	// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	Если Элементы.ПоискПоШтрихкоду.Пометка Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Ссылка");
		Элементы.ПоискПоШтрихкоду.Пометка = Ложь;
		Элементы.СписокКонтекстноеМенюПоискПоШтрихкоду.Пометка = Ложь;
	Иначе
		Оповещение = Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект);
		ПоказатьВводСтроки(Оповещение, "", НСтр("ru = 'Введите штрихкод'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(ШтрихКод, ДополнительныеПараметры) Экспорт
	
	Если ШтрихКод = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НоменклатураПоШтрихкоду = НайтиНоменклатуруПоШтрихкоду(ШтрихКод);
	
	Если НоменклатураПоШтрихкоду = Неопределено Тогда
		
		// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
		Если РаботаСНоменклатуройКлиент.ДоступенФункционалПодсистемы() Тогда
			РаботаСНоменклатуройКлиент.НайтиНоменклатуруПоШтрихкодуВСервисе(ШтрихКод);
		Иначе
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Номенклатура не найдена'"),,
				СтрШаблон(НСтр("ru = 'По штрихкоду %1 номенклатура не найдена.'"), ШтрихКод),,
				СтатусОповещенияПользователя.Информация);
		КонецЕсли;
		// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Ссылка", НоменклатураПоШтрихкоду, ВидСравненияКомпоновкиДанных.ВСписке);
		Элементы.ПоискПоШтрихкоду.Пометка = Истина;
		Элементы.СписокКонтекстноеМенюПоискПоШтрихкоду.Пометка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиНоменклатуруПоШтрихкоду(ШтрихКод)
	
	Возврат РегистрыСведений.Штрихкоды.НайтиНоменклатуруПоШтрихкоду(ШтрихКод);
	
КонецФункции

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ПодключаемыеКоманды

// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
&НаКлиенте
Процедура Подключаемый_ПодобратьНоменклатуруИзСервиса(Команда)
		
	РаботаСНоменклатуройКлиент.ПодобратьНоменклатуруИзСервиса();
	
КонецПроцедуры	
// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указан владелец банковского счета.'"),,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Элементы.Владелец.Заголовок = НСтр("ru = 'Контрагент'");
		
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
		
		ИспользуетсяНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизацийЭД");
		
		Элементы.Владелец.Видимость = ИспользуетсяНесколькоОрганизаций;
		
	КонецЕсли;
	
	ИспользуетсяБанкДляРасчетов = ЗначениеЗаполнено(Объект.БанкДляРасчетов);
	
	Если Параметры.Ключ.Пустая() Тогда
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Объект.Наименование = "";
			УстановитьНаименованиеСчета(ЭтотОбъект);
		Иначе
			АвтоНаименование = СокрЛП(Объект.Наименование);
			Если ПустаяСтрока(Объект.НомерСчета) И НЕ ПустаяСтрока(АвтоНаименование)
				И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(АвтоНаименование) Тогда
				Объект.НомерСчета = АвтоНаименование;
			Иначе
				Объект.Наименование = "";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда 
		ОбновитьРеквизитыВладельцаНаФорме(ЭтотОбъект, Объект.Владелец);
	КонецЕсли;
	
	ОбновитьРеквизитыБанкаНаФорме(ЭтотОбъект, Объект.Банк);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ИспользуетсяБанкДляРасчетов Тогда
		ТекущийОбъект.БанкДляРасчетов = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаНастройкаОбмена" Тогда
		ОбновитьЗаголовокНастройкиОбменаСБанком(Элементы.НастройкаОбмена,
			Объект.Владелец, Объект.Банк);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не СтрДлина(Объект.НомерСчета) = 20 Тогда 
		
		ТекстОшибки = НСтр("ru = 'Длина номера счета должна быть 20 символов.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Объект.Ссылка, "НомерСчета", "Объект", Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользуетсяБанкДляРасчетовПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаОтключенПриИзменении(Элемент)
	РежимОбменаПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаПрямойОбменПриИзменении(Элемент)
	РежимОбменаПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаКлиентБанкаПриИзменении(Элемент)
	РежимОбменаПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайла(Истина, НСтр("ru='Выберите файл для загрузки данных из клиента банка'"));
		
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайла(Ложь, НСтр("ru='Выберите файл для выгрузки данных в клиента банка'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	УстановитьНаименованиеСчета(Форма);
	
	Форма.Элементы.БанкДляРасчетов.Доступность = Форма.ИспользуетсяБанкДляРасчетов;
	
	Форма.Элементы.ГруппаОбменСБанком.Видимость = ЗначениеЗаполнено(Форма.Объект.Владелец)
		И (ТипЗнч(Форма.Объект.Владелец) = Тип("СправочникСсылка.Организации"));
	
	Если Форма.ВозможенПрямойОбмен Тогда
		Форма.Элементы.РежимОбменаДиректБанк.СписокВыбора[0].Представление = НСтр("ru = 'Сервис 1С:ДиректБанк (рекомендуется)'");
	Иначе
		Форма.Элементы.РежимОбменаДиректБанк.СписокВыбора[0].Представление = НСтр("ru = 'Сервис 1С:ДиректБанк'");
	КонецЕсли;

	ОбновитьЗаголовокНастройкиОбменаСБанком(Форма.Элементы.НастройкаОбмена, 
		Форма.Объект.Владелец, Форма.Объект.Банк);
	
	ОбновитьЗаголовокГруппыОбменСБанком(Форма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНаименованиеСчета(Форма, ИзменениеНомераСчета = Ложь)
	
	Объект = Форма.Объект;
	
	Если ПустаяСтрока(Объект.Наименование) ИЛИ Объект.Наименование = Форма.АвтоНаименование Тогда
		Форма.АвтоНаименование = СформироватьАвтоНаименование(Форма);
		Если НЕ ПустаяСтрока(Форма.АвтоНаименование) И Форма.АвтоНаименование <> Объект.Наименование Тогда
			Объект.Наименование = Форма.АвтоНаименование;
		КонецЕсли;
	Иначе
		Если ИзменениеНомераСчета И НЕ ПустаяСтрока(Форма.НомерСчетаТекущий) Тогда
			Объект.Наименование = СтрЗаменить(Объект.Наименование, Форма.НомерСчетаТекущий, СокрЛП(Объект.НомерСчета));
		КонецЕсли;
		
		Форма.АвтоНаименование = СформироватьАвтоНаименование(Форма, Объект.Наименование);
	КонецЕсли;
	
	Форма.НомерСчетаТекущий = СокрЛП(Объект.НомерСчета);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьАвтоНаименование(Форма, Знач Текст = "")
	
	Элементы     = Форма.Элементы;
	Объект       = Форма.Объект;
	
	ПредставлениеБанка = "";
	Если ЗначениеЗаполнено(Объект.Банк) Тогда
		ПредставлениеБанка = СокрЛП(Форма.НаименованиеБанка);
	КонецЕсли;
	
	ПредставлениеВладельца = "";
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ПредставлениеВладельца = СокрЛП(Форма.НаименованиеВладельца);
	КонецЕсли;

	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования1 = НаименованиеБанковскогоСчетаПоУмолчанию(
		Объект.НомерСчета,
		ПредставлениеБанка,
		ПредставлениеВладельца,
		1); // Вариант по умолчанию выводим последним
	
	Если НЕ ПустаяСтрока(СтрокаНаименования1) Тогда
		Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(СтрокаНаименования1));
	КонецЕсли;
	
	СтрокаНаименования2 = НаименованиеБанковскогоСчетаПоУмолчанию(
		Объект.НомерСчета,
		ПредставлениеБанка,
		ПредставлениеВладельца,
		2);
	
	Строки1и2НеРавны = СокрЛП(СтрокаНаименования2) <> "(" + СтрокаНаименования1 + ")";
	Если СтрокаНаименования2 <> "" И Строки1и2НеРавны
			И Элементы.Наименование.СписокВыбора.НайтиПоЗначению(СтрокаНаименования2) = Неопределено Тогда
		Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(СтрокаНаименования2));
	КонецЕсли;
	
	СтрокаНаименования = НаименованиеБанковскогоСчета(Объект, ПредставлениеБанка, ПредставлениеВладельца);
	
	Если НЕ ПустаяСтрока(СтрокаНаименования) И Элементы.Наименование.СписокВыбора.НайтиПоЗначению(СтрокаНаименования) = Неопределено Тогда
		Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(СтрокаНаименования));
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Текст) И Элементы.Наименование.СписокВыбора.НайтиПоЗначению(Текст) = Неопределено Тогда
		Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(Текст));
	КонецЕсли;
	
	Возврат СтрокаНаименования;
	
КонецФункции

// Формирует текст наименования банковского счета по умолчанию.
//
// Параметры:
//  НомерСчета			 	- Строка
//  ПредставлениеБанка	 	- Строка
//  ПредставлениеВладельца 	- Строка
//  Вариант				 	- Число - Вариант формирования наименования.
// 
// Возвращаемое значение:
//  Строка - наименование по умолчанию.
//
&НаСервереБезКонтекста
Функция НаименованиеБанковскогоСчетаПоУмолчанию(Знач НомерСчета, ПредставлениеБанка, ПредставлениеВладельца,Вариант = 0)
	
	// Варианты наименования отличаются последовательностью элементов:
	// 0: 40702978000000000000, ОАО "СБЕРБАНК РОССИИ", EUR
	// 1: 40702978000000000000 (EUR) в ОАО "СБЕРБАНК РОССИИ"
	// 2: ОАО "СБЕРБАНК РОССИИ" (40702978000000000000, EUR)
	
	ЭлементыНаименования = Новый Массив;
	
	НомерСчета = СокрЛП(НомерСчета);
	Если Вариант = 1 Тогда
		
		Если Не ПустаяСтрока(НомерСчета) Тогда
			ЭлементыНаименования.Добавить(Прав(НомерСчета, 4));
		КонецЕсли;
		
		Если Не ПустаяСтрока(ПредставлениеБанка) Тогда
			ЭлементыНаименования.Добавить(СтрШаблон(НСтр("ru = 'в %1'"), ПредставлениеБанка));
		КонецЕсли;
		
		Если Не ПустаяСтрока(ПредставлениеВладельца) Тогда
			ЭлементыНаименования.Добавить(СтрШаблон(НСтр("ru = '(%1)'"), ПредставлениеВладельца));
		КонецЕсли;
		
		
		Наименование = СтрСоединить(ЭлементыНаименования, " ");
		
	ИначеЕсли Вариант = 2 Тогда
		
		Если Не ПустаяСтрока(ПредставлениеБанка) Тогда
			ЭлементыНаименования.Добавить(ПредставлениеБанка);
		КонецЕсли;
		
		ЭлементыВСкобках = Новый Массив;
		
		Если Не ПустаяСтрока(НомерСчета) Тогда
			ЭлементыВСкобках.Добавить(Прав(НомерСчета, 4));
		КонецЕсли;
		
		СтрокаЭлементыВСкобках = СтрСоединить(ЭлементыВСкобках, ", ");
		Если Не ПустаяСтрока(СтрокаЭлементыВСкобках) Тогда
			ЭлементыНаименования.Добавить(СтрШаблон(НСтр("ru = '(%1)'"), СтрокаЭлементыВСкобках));
		КонецЕсли;
		
		Если Не ПустаяСтрока(ПредставлениеВладельца) Тогда
			ЭлементыНаименования.Добавить(СтрШаблон(НСтр("ru = ', %1'"), ПредставлениеВладельца));
		КонецЕсли;
		
		Наименование = СтрСоединить(ЭлементыНаименования, " ");
		
	Иначе
		
		Если Не ПустаяСтрока(НомерСчета) Тогда
			ЭлементыНаименования.Добавить(Прав(НомерСчета, 4));
		КонецЕсли;
		
		Если Не ПустаяСтрока(ПредставлениеБанка) Тогда
			ЭлементыНаименования.Добавить(ПредставлениеБанка);
		КонецЕсли;
		
		Если Не ПустаяСтрока(ПредставлениеВладельца) Тогда
			ЭлементыНаименования.Добавить(ПредставлениеВладельца);
		КонецЕсли;
		
		Наименование = СтрСоединить(ЭлементыНаименования, ", ");
		
	КонецЕсли;
		
	Возврат Лев(Наименование, 100);
	
КонецФункции

// Функция формирует текст наименования для элемента счета.
//
// Параметры:
//  БанковскийСчет - ДанныеФормыСтруктура - банковский счет, для которого требуется сформировать наименование.
//  НаименованиеБанка - Строка - наименование банка, которое будет присвоено банковскому счету.
//  ПредставлениеВладельца - Строка - наименование владельца, которое будет присвоено банковскому счету.
//
// Возвращаемое значение:
//  Строка -  сформированный текст наименования счета.
//
&НаСервереБезКонтекста
Функция НаименованиеБанковскогоСчета(БанковскийСчет, НаименованиеБанка, ПредставлениеВладельца)
	
	БанковскийСчетНаименование = СокрЛП(БанковскийСчет.НомерСчета);
	Если ЗначениеЗаполнено(БанковскийСчет.Банк) Тогда
		БанковскийСчетНаименование = Прав(БанковскийСчетНаименование, 4) + ", " + НаименованиеБанка + СтрШаблон(" (%1)", ПредставлениеВладельца);
	КонецЕсли;
	
	Возврат Лев(БанковскийСчетНаименование, 100);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьРеквизитыБанкаНаФорме(Форма, БанкСсылка)
	
	Если ЗначениеЗаполнено(БанкСсылка) Тогда

		РеквизитыБанка = ПолучитьЗначенияРеквизитовПоСсылке(БанкСсылка, "Наименование, Код");
		
		Форма.НаименованиеБанка = РеквизитыБанка.Наименование;
		Форма.ВозможенПрямойОбмен = ВозможенПрямойОбменСБанком(РеквизитыБанка.Код);
	Иначе
		Форма.НаименованиеБанка = "";
		Форма.ВозможенПрямойОбмен = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьРеквизитыВладельцаНаФорме(Форма, Владелец)
	
	Если ЗначениеЗаполнено(Владелец) Тогда

		РеквизитыВладельца = ПолучитьЗначенияРеквизитовПоСсылке(Владелец, "Наименование");
		
		Форма.НаименованиеВладельца = РеквизитыВладельца.Наименование;
		
	Иначе
		
		Форма.НаименованиеВладельца = "";
	КонецЕсли;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьЗначенияРеквизитовПоСсылке(Ссылка, Реквизиты)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты)
	
КонецФункции

&НаКлиенте
Процедура НастройкаОбменаНажатие(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Или Модифицированность
		Или Объект.РежимОбменаСБанком <> 1 Тогда
		
		Если ПроверитьЗаполнение() Тогда
			Объект.РежимОбменаСБанком = 1;
			РежимОбменаПриИзменении();
			Записать();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ПослеСозданияНастройкиОбмена", ЭтотОбъект);
	ОбменСБанкамиКлиент.ОткрытьСоздатьНастройкуОбмена(Объект.Владелец, Объект.Банк, Объект.НомерСчета, Обработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	
	ОбновитьРеквизитыБанкаНаФорме(ЭтотОбъект, Объект.Банк);
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПослеСозданияНастройкиОбмена(НастройкаОбмена, Параметры) Экспорт
	
	ОбновитьЗаголовокНастройкиОбменаСБанком(Элементы.НастройкаОбмена, Объект.Владелец, Объект.Банк);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	СформироватьАвтоНаименование(ЭтотОбъект, Объект.Наименование);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	УстановитьНаименованиеСчета(ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаПриИзменении()
	
	ОбновитьЗаголовокГруппыОбменСБанком(ЭтотОбъект);
		
	Элементы.ГруппаПараметрыКлиентБанка.Видимость = (Объект.РежимОбменаСБанком = 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайла(Загрузка, Заголовок);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Загрузка", Загрузка);
	ДополнительныеПараметры.Вставить("Заголовок", Заголовок);
	
	Обработчик = Новый ОписаниеОповещения("ВыборФайлаПослеУстановкиРасширения", ЭтотОбъект, ДополнительныеПараметры);
	ТекстСообщения = НСтр("ru = 'Для выбора файла необходимо установить расширение работы с файлами.'");
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Обработчик, ТекстСообщения, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаПослеУстановкиРасширения(РасширениеПодключено, ДополнительныеПараметры) Экспорт
	
	Если НЕ РасширениеПодключено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайла = ?(ДополнительныеПараметры.Загрузка, ФайлЗагрузки, ФайлВыгрузки);
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		
	ДиалогВыбораФайла.Фильтр = НСтр("ru='Текстовый файл (*.txt)|*.txt'");
	ДиалогВыбораФайла.Заголовок = ДополнительныеПараметры.Заголовок;
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.Расширение = "txt";
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла = ИмяФайла;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыборФайлаЗавершение",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Загрузка Тогда
		ФайлЗагрузки = ВыбранныеФайлы[0];
	Иначе
		ФайлВыгрузки = ВыбранныеФайлы[0];
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовокНастройкиОбменаСБанком(Элемент, Знач Организация, Знач Банк)
	
	ВключенаФО = Ложь;
	ТекущаяНастройка = НастройкаОбмена(Организация, Банк, ВключенаФО);
	
	Если Не ВключенаФО ИЛИ НЕ ЗначениеЗаполнено(ТекущаяНастройка) Тогда
		Элемент.Заголовок = НСтр("ru = 'Подключить'");
	Иначе
		РеквизитыНастройкиОбмена = РеквизитыНастройкиОбмена(ТекущаяНастройка);
		Если НЕ РеквизитыНастройкиОбмена.Недействительна И НЕ РеквизитыНастройкиОбмена.ПометкаУдаления Тогда
			Элемент.Заголовок = НСтр("ru = 'Подключен'");
		Иначе
			Элемент.Заголовок = НСтр("ru = 'Не подключен'");
		КонецЕсли;
	КонецЕсли
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкаОбмена(Знач Организация, Знач Банк, ВключенаФО)
	
	УстановитьПривилегированныйРежим(Истина);
	ВключенаФО = Константы.ИспользоватьОбменСБанками.Получить();
	Возврат ОбменСБанками.НастройкаОбмена(Организация, Банк);
	
КонецФункции

&НаСервереБезКонтекста
Функция РеквизитыНастройкиОбмена(НастройкаОбмена)
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НастройкаОбмена, "Недействительна, ПометкаУдаления");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовокГруппыОбменСБанком(Форма);
	РежимОбменаСБанком = Форма.Объект.РежимОбменаСБанком;
		
	Если РежимОбменаСБанком = 1 Тогда
		Шаблон = НСтр("ru = 'Обмен с банком (%1 сервис 1С:ДиректБанк)'");
		ЗаголовокГруппы = СтрШаблон(Шаблон, НРег(Форма.Элементы.НастройкаОбмена.Заголовок));
	ИначеЕсли РежимОбменаСБанком = 2 Тогда
		ЗаголовокГруппы = НСтр("ru = 'Обмен с банком (через Клиент-банк)'");
	Иначе
		ЗаголовокГруппы = НСтр("ru = 'Обмен с банком (выключен)'");
	КонецЕсли;
	
	Форма.Элементы.ГруппаОбменСБанком.ЗаголовокСвернутогоОтображения = ЗаголовокГруппы;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВозможенПрямойОбменСБанком(БИКБанка)
	Возврат ОбменСБанками.ВозможенПрямойОбменСБанком(БИКБанка, "1");
КонецФункции

#КонецОбласти

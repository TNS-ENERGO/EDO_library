
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере()
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьДинамическийСписок();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	МассивОснований = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбраннаяСтрока);
	Закрыть(МассивОснований);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьОснования(Команда)
	
	МассивОснований = Элементы.Список.ВыделенныеСтроки;
	
	Если МассивОснований.Количество() > 1
		И ОснованияНесовместимы(МассивОснований) Тогда
		
		ТекстСообщения = НСтр("ru='В список документов-оснований можно выбирать документы с одинаковыми организацией, контрагентом и договором'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Закрыть(МассивОснований);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДинамическийСписок()
	
	Если Параметры.ВидОперации <> Перечисления.ВидыОпераций.Реализация Тогда
		
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
			|	РеализацияТоваровУслуг.Номер КАК Номер,
			|	РеализацияТоваровУслуг.Дата КАК Дата,
			|	РеализацияТоваровУслуг.ВидДокумента КАК ВидДокумента,
			|	РеализацияТоваровУслуг.ВидОперации КАК ВидОперации,
			|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
			|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
			|	РеализацияТоваровУслуг.Организация КАК Организация,
			|	РеализацияТоваровУслуг.ПредставлениеНомера КАК ПредставлениеНомера,
			|	ОснованияСчетаФактурыОснования.Ссылка КАК СчетФактураОснование
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактурыОснования
			|		ПО (РеализацияТоваровУслуг.ДокументОснование = ОснованияСчетаФактурыОснования.ДокументОснование)
			|			И (НЕ РеализацияТоваровУслуг.ПометкаУдаления)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ОснованияСчетаФактуры
			|		ПО (РеализацияТоваровУслуг.Ссылка = ОснованияСчетаФактуры.ДокументОснование)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
			|		ПО (ОснованияСчетаФактуры.Ссылка = СчетФактураВыданный.Ссылка)
			|			И (НЕ СчетФактураВыданный.ПометкаУдаления)
			|ГДЕ
			|	СчетФактураВыданный.Ссылка ЕСТЬ NULL
			|	И РеализацияТоваровУслуг.ВидОперации = &ВидОперации
			|	И НЕ РеализацияТоваровУслуг.Ссылка В (&СписокОснований)";
		
		СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
		СвойстваСписка.ОсновнаяТаблица              = "Документ.РеализацияТоваровУслуг";
		СвойстваСписка.ТекстЗапроса                 = ТекстЗапроса;
		СвойстваСписка.ДинамическоеСчитываниеДанных = Истина;
		ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
		
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ВидОперации",     Параметры.ВидОперации);
	Список.Параметры.УстановитьЗначениеПараметра("СписокОснований", Параметры.СписокОснований.ВыгрузитьЗначения());
	
	МассивОтборов = Новый Массив;
	
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Организация");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ПравоеЗначение = Параметры.Организация;
		
		МассивОтборов.Добавить(Параметры.Организация);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Контрагент) Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Контрагент");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ПравоеЗначение = Параметры.Контрагент;
		
		МассивОтборов.Добавить(Параметры.Контрагент);
	КонецЕсли;
	
	Если Параметры.Свойство("ДоговорКонтрагента") Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДоговорКонтрагента");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ПравоеЗначение = Параметры.ДоговорКонтрагента;
		
		Если ЗначениеЗаполнено(Параметры.ДоговорКонтрагента) Тогда
			МассивОтборов.Добавить(Параметры.Контрагент);
		Иначе
			МассивОтборов.Добавить(НСтр("ru = 'Без договора'"));
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СчетФактураОснование) Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СчетФактураОснование");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ПравоеЗначение = Параметры.СчетФактураОснование;
		
		МассивОтборов.Добавить(Параметры.СчетФактураОснование);
	КонецЕсли;
	
	Если МассивОтборов.Количество() = 0 Тогда
		Элементы.НадписьОтборы.Видимость = Ложь;
	Иначе
		Элементы.НадписьОтборы.Видимость = Истина;
		ТекстОтбора = СтрСоединить(МассивОтборов, "; ");
		НадписьОтборы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отбор по: %1'"), ТекстОтбора);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОснованияНесовместимы(Знач МассивОснований)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Организация КАК Организация,
		|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&СписокОснований)
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслуг.Организация,
		|	РеализацияТоваровУслуг.Контрагент,
		|	РеализацияТоваровУслуг.ДоговорКонтрагента";
	
	Запрос.УстановитьПараметр("СписокОснований", МассивОснований);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Количество() > 1;
	
КонецФункции

#КонецОбласти

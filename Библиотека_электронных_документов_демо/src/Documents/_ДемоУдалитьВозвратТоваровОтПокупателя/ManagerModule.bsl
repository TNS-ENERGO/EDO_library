#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
	
// Регистрирует данные для обработчика обновления
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.ДокументОснование КАК Ссылка
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЭлектронныйДокументВходящийДокументыОснования.ДокументОснование КАК ДокументОснование
		|	ИЗ
		|		Документ.ЭлектронныйДокументВходящий.ДокументыОснования КАК ЭлектронныйДокументВходящийДокументыОснования
		|	ГДЕ
		|		ЭлектронныйДокументВходящийДокументыОснования.ДокументОснование ССЫЛКА Документ._ДемоУдалитьВозвратТоваровОтПокупателя
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЭлектронныйДокументИсходящийДокументыОснования.ДокументОснование
		|	ИЗ
		|		Документ.ЭлектронныйДокументИсходящий.ДокументыОснования КАК ЭлектронныйДокументИсходящийДокументыОснования
		|	ГДЕ
		|		ЭлектронныйДокументИсходящийДокументыОснования.ДокументОснование ССЫЛКА Документ._ДемоУдалитьВозвратТоваровОтПокупателя
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СостоянияЭД.СсылкаНаОбъект
		|	ИЗ
		|		РегистрСведений.СостоянияЭД КАК СостоянияЭД
		|	ГДЕ
		|		СостоянияЭД.СсылкаНаОбъект ССЫЛКА Документ._ДемоУдалитьВозвратТоваровОтПокупателя) КАК ВложенныйЗапрос";
	
	МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, МассивСсылок);
	
КонецПроцедуры

// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(
		Параметры.Очередь, "Документ._ДемоУдалитьВозвратТоваровОтПокупателя");
	
	МассивСсылок = Новый Массив;
	Пока Выборка.Следующий() Цикл
		МассивСсылок.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЭлектронныйДокументВходящийДокументыОснования.ДокументОснование КАК ОбрабатываемыйДокумент,
		|	ЭлектронныйДокументВходящийДокументыОснования.Ссылка КАК ИзменяемыйДокумент,
		|	""ЭлектронныйДокументВходящий"" КАК ВидДанных
		|ИЗ
		|	Документ.ЭлектронныйДокументВходящий.ДокументыОснования КАК ЭлектронныйДокументВходящийДокументыОснования
		|ГДЕ
		|	ЭлектронныйДокументВходящийДокументыОснования.ДокументОснование В (&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронныйДокументИсходящийДокументыОснования.ДокументОснование,
		|	ЭлектронныйДокументИсходящийДокументыОснования.Ссылка,
		|	""ЭлектронныйДокументИсходящий""
		|ИЗ
		|	Документ.ЭлектронныйДокументИсходящий.ДокументыОснования КАК ЭлектронныйДокументИсходящийДокументыОснования
		|ГДЕ
		|	ЭлектронныйДокументИсходящийДокументыОснования.ДокументОснование В (&МассивСсылок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СостоянияЭД.СсылкаНаОбъект,
		|	СостоянияЭД.СсылкаНаОбъект,
		|	""СостоянияЭД""
		|ИЗ
		|	РегистрСведений.СостоянияЭД КАК СостоянияЭД
		|ГДЕ
		|	СостоянияЭД.СсылкаНаОбъект В (&МассивСсылок)
		|ИТОГИ ПО
		|	ОбрабатываемыйДокумент";
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		
		Попытка
			
			ВозвратОтПокупателяОбъект = Выборка.ОбрабатываемыйДокумент.ПолучитьОбъект();
			ПоступлениеОбъект = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
			ЗаполнитьЗначенияСвойств(ПоступлениеОбъект, ВозвратОтПокупателяОбъект);
			Для Каждого СтрокаТаблицы Из ВозвратОтПокупателяОбъект.Товары Цикл
				НоваяСтрока = ПоступлениеОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			КонецЦикла;
			
			ПоступлениеОбъект.ВидДокумента = Перечисления.ВидыДокументов.НакладнаяНаВозврат;
			ПоступлениеОбъект.ВидОперации  = Перечисления.ВидыОпераций.Реализация;
			
			ПоступлениеОбъект.ДополнительныеСвойства.Вставить("ПроверитьЗаполнениеБезВыводаОшибок");
			Если ВозвратОтПокупателяОбъект.Проведен
				И ПоступлениеОбъект.ПроверитьЗаполнение() Тогда
				РежимЗаписи = РежимЗаписиДокумента.Проведение;
			Иначе
				ПоступлениеОбъект.ОбменДанными.Загрузка = Истина;
				РежимЗаписи = РежимЗаписиДокумента.Запись;
			КонецЕсли;
			
			ПоступлениеОбъект.Записать(РежимЗаписи);
			
			ВыборкаИзменяемыеДанные = Выборка.Выбрать();
			Пока ВыборкаИзменяемыеДанные.Следующий() Цикл
				
				Если ВыборкаИзменяемыеДанные.ВидДанных = "ЭлектронныйДокументВходящий"
					ИЛИ ВыборкаИзменяемыеДанные.ВидДанных = "ЭлектронныйДокументИсходящий" Тогда
					
					ЭлектронныйДокумент = ВыборкаИзменяемыеДанные.ИзменяемыйДокумент.ПолучитьОбъект();
					ПараметрыОтбора = Новый Структура("ДокументОснование", Выборка.ОбрабатываемыйДокумент);
					МассивСтрок = ЭлектронныйДокумент.ДокументыОснования.НайтиСтроки(ПараметрыОтбора);
					Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
						СтрокаТаблицы.ДокументОснование = ПоступлениеОбъект.Ссылка;
					КонецЦикла;
					
					ЭлектронныйДокумент.ОбменДанными.Загрузка = Истина;
					ЭлектронныйДокумент.Записать();
					
				ИначеЕсли ВыборкаИзменяемыеДанные.ВидДанных = "СостоянияЭД" Тогда
					
					Запись = РегистрыСведений.СостоянияЭД.СоздатьМенеджерЗаписи();
					Запись.СсылкаНаОбъект = Выборка.ОбрабатываемыйДокумент;
					Запись.Прочитать();
					Если Запись.Выбран() Тогда
						Запись.СсылкаНаОбъект = ПоступлениеОбъект.Ссылка;
						Запись.Записать(Истина);
					КонецЕсли;
					
				КонецЕсли;
			
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.ОбрабатываемыйДокумент);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать документ: %1 по причине: %2'"), 
				Выборка.ОбрабатываемыйДокумент, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			СобытиеЖурналаРегистрации = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации();
			ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Предупреждение,
			Метаданные.Документы._ДемоУдалитьВозвратТоваровОтПокупателя, Выборка.ОбрабатываемыйДокумент, ТекстСообщения);
			
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь,
		"Документ._ДемоУдалитьВозвратТоваровОтПокупателя");
	
КонецПроцедуры

// См. ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы.
Функция ДанныеОбновленыНаНовуюВерсиюПрограммы(МетаданныеИОтбор) Экспорт
	
	Если МетаданныеИОтбор.ПолноеИмя = "Документ._ДемоУдалитьВозвратТоваровОтПокупателя" Тогда
		Возврат ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы(МетаданныеИОтбор);
	Иначе
		Возврат ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Неопределено,
			"Документ._ДемоУдалитьВозвратТоваровОтПокупателя");
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли
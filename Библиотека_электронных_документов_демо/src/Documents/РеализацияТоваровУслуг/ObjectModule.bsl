#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Основание") И ДанныеЗаполнения.Свойство("ВидОперации") Тогда
	
		ДокументОснование = ДанныеЗаполнения.Основание;
		ВидОперации       = ДанныеЗаполнения.ВидОперации;
		
		ВидДокумента                   = ДокументОснование.ВидДокумента;
		БанковскийСчетОрганизации      = ДокументОснование.БанковскийСчетОрганизации;
		Валюта                         = ДокументОснование.Валюта;
		Грузоотправитель               = ДокументОснование.Грузоотправитель;
		Грузополучатель                = ДокументОснование.Грузополучатель;
		ДатаОтгрузки                   = ДокументОснование.ДатаОтгрузки;
		ДатаТранспортнойНакладной      = ДокументОснование.ДатаТранспортнойНакладной;
		ДоговорКонтрагента             = ДокументОснование.ДоговорКонтрагента;
		ИдентификаторГосКонтракта      = ДокументОснование.ИдентификаторГосКонтракта;
		Контрагент                     = ДокументОснование.Контрагент;
		НомерТранспортнойНакладной     = ДокументОснование.НомерТранспортнойНакладной;
		Организация                    = ДокументОснование.Организация;
		Перевозчик                     = ДокументОснование.Перевозчик;
		СведенияОТранспортировкеИГрузе = ДокументОснование.СведенияОТранспортировкеИГрузе;
		ОблагаетсяНДСУПокупателя       = ДокументОснование.ОблагаетсяНДСУПокупателя;
		ЦенаВключаетНДС                = ДокументОснование.ЦенаВключаетНДС;
		СуммаДокумента                 = ДокументОснование.СуммаДокумента;
		
		ЗаполнитьНомерДатуИсходногоДокумента(ДокументОснование);
		
		ИсправлениеКорректировки = ЗначениеЗаполнено(НомерИсправляемогоКорректировочногоДокумента)
			И ЗначениеЗаполнено(ДатаИсправляемогоКорректировочногоДокумента);
		Корректировка = ВидОперации = Перечисления.ВидыОпераций.Корректировка;
		
		Товары.Очистить();
		
		Для Каждого ТекСтрокаТовары Из ДокументОснование.Товары Цикл
			
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Номенклатура             = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Характеристика           = ТекСтрокаТовары.Характеристика;
			НоваяСтрока.ЕдиницаИзмерения         = ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.НомерГТД                 = ТекСтрокаТовары.НомерГТД;
			НоваяСтрока.СтранаПроисхождения      = ТекСтрокаТовары.СтранаПроисхождения;
			
			НоваяСтрока.Количество  = ТекСтрокаТовары.Количество;
			НоваяСтрока.Цена        = ТекСтрокаТовары.Цена;
			НоваяСтрока.Сумма       = ТекСтрокаТовары.Сумма;
			НоваяСтрока.СтавкаНДС   = ТекСтрокаТовары.СтавкаНДС;
			НоваяСтрока.СуммаНДС    = ТекСтрокаТовары.СуммаНДС;
			НоваяСтрока.СуммаСНДС   = ТекСтрокаТовары.СуммаСНДС;
			НоваяСтрока.СуммаАкциза = ТекСтрокаТовары.СуммаАкциза;
			
			Если Корректировка Тогда
				
				НоваяСтрока.КоличествоДоКорректировки  = ТекСтрокаТовары.Количество;
				НоваяСтрока.ЦенаДоКорректировки        = ТекСтрокаТовары.Цена;
				НоваяСтрока.СуммаДоКорректировки       = ТекСтрокаТовары.Сумма;
				НоваяСтрока.СуммаНДСДоКорректировки    = ТекСтрокаТовары.СуммаНДС;
				НоваяСтрока.СуммаСНДСДоКорректировки   = ТекСтрокаТовары.СуммаСНДС;
				НоваяСтрока.СуммаАкцизаДоКорректировки = ТекСтрокаТовары.СуммаАкциза;
			
			ИначеЕсли ИсправлениеКорректировки Тогда
				
				НоваяСтрока.Количество  = ТекСтрокаТовары.Количество;
				НоваяСтрока.Цена        = ТекСтрокаТовары.Цена;
				НоваяСтрока.Сумма       = ТекСтрокаТовары.Сумма;
				НоваяСтрока.СуммаНДС    = ТекСтрокаТовары.СуммаНДС;
				НоваяСтрока.СуммаСНДС   = ТекСтрокаТовары.СуммаСНДС;
				НоваяСтрока.СуммаАкциза = ТекСтрокаТовары.СуммаАкциза;
				
				НоваяСтрока.КоличествоДоКорректировки  = ТекСтрокаТовары.КоличествоДоКорректировки;
				НоваяСтрока.ЦенаДоКорректировки        = ТекСтрокаТовары.ЦенаДоКорректировки;
				НоваяСтрока.СуммаДоКорректировки       = ТекСтрокаТовары.СуммаДоКорректировки;
				НоваяСтрока.СуммаНДСДоКорректировки    = ТекСтрокаТовары.СуммаНДСДоКорректировки;
				НоваяСтрока.СуммаСНДСДоКорректировки   = ТекСтрокаТовары.СуммаСНДСДоКорректировки;
				НоваяСтрока.СуммаАкцизаДоКорректировки = ТекСтрокаТовары.СуммаАкцизаДоКорректировки;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	УстановитьПредставлениеНомера();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	СуммаДокумента = Товары.Итог("СуммаСНДС");
	
	Если ОблагаетсяНДСУПокупателя Тогда
		Для Каждого СтрокаТаблицы Из Товары Цикл
			СтрокаТаблицы.СтавкаНДС = Неопределено;
			СтрокаТаблицы.СуммаНДС  = 0;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Документы.СчетФактураВыданный.ПроверитьСоответствиеРеквизитовСчетаФактуры(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ПредставлениеНомера = "";
	
	НомерЭД = "";
	ДокументОснование = Неопределено;
	ДатаОтгрузки = Дата(1,1,1);
	НомерИсправления = 0;
	НомерИсправленияИсходногоДокумента = 0;
	НомерИсправляемогоКорректировочногоДокумента = "";
	НомерИсходногоДокумента = "";
	ДатаИсправленияИсходногоДокумента = Дата(1,1,1);
	ДатаИсправляемогоКорректировочногоДокумента = Дата(1,1,1);
	ДатаИсходногоДокумента = Дата(1,1,1);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование)
		И (ВидОперации = Перечисления.ВидыОпераций.Исправление
		ИЛИ ВидОперации = Перечисления.ВидыОпераций.Корректировка) Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не выбран документ-основание к %1.'"),
			?(ВидОперации = Перечисления.ВидыОпераций.Исправление,
				НСтр("ru = 'исправлению'"), НСтр("ru = 'корректировке'")));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, ,
			"ДокументОснованиеПредставление", Отказ);
		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВидОперации = Перечисления.ВидыОпераций.Корректировка
		ИЛИ (ВидОперации = Перечисления.ВидыОпераций.Исправление
			И ЗначениеЗаполнено(НомерИсправляемогоКорректировочногоДокумента)) Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Количество");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Цена");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Сумма");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.СтавкаНДС");
		
		МассивСтрок = Товары.НайтиСтроки(Новый Структура("КоличествоДоКорректировки", 0));
		Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
			Для Каждого Реквизит Из МассивНепроверяемыхРеквизитов Цикл
				ИмяКолонки = Сред(Реквизит, 8);
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы[ИмяКолонки]) Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""Товары""'"),
						ИмяКолонки, СтрокаТаблицы.НомерСтроки);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка,
						"Товары[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0") + "]." + ИмяКолонки, "Объект", Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ОблагаетсяНДСУПокупателя Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.СтавкаНДС");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МассивНепроверяемыхРеквизитов) Тогда
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьПредставлениеНомера()
	
	Если ПустаяСтрока(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;
	
	Если ПустаяСтрока(НомерЭД) Тогда
		НомерЭД = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Номер, Истина, Истина);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НомерИсправления) Тогда
		ПредставлениеНомера = СтрШаблон(НСтр("ru = '%1 (испр. %2)'"),
			НомерЭД, НомерИсправления);
	Иначе
		ПредставлениеНомера = НомерЭД;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНомерДатуИсходногоДокумента(ДокументОснование)
	
	Если ДокументОснование.ВидОперации = Перечисления.ВидыОпераций.Реализация Тогда
		НомерИсходногоДокумента = ДокументОснование.НомерЭД;
		ДатаИсходногоДокумента  = ДокументОснование.Дата;
		Если ВидОперации = Перечисления.ВидыОпераций.Исправление Тогда
			НомерИсправления = 1;
			НомерЭД = НомерИсходногоДокумента;
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОпераций.Исправление
		И ДокументОснование.ВидОперации = Перечисления.ВидыОпераций.Корректировка Тогда
		
		НомерИсходногоДокумента = ДокументОснование.НомерИсходногоДокумента;
		ДатаИсходногоДокумента  = ДокументОснование.ДатаИсходногоДокумента;
		НомерИсправленияИсходногоДокумента = ДокументОснование.НомерИсправленияИсходногоДокумента;
		ДатаИсправленияИсходногоДокумента  = ДокументОснование.ДатаИсправленияИсходногоДокумента;
		НомерИсправляемогоКорректировочногоДокумента = ДокументОснование.НомерЭД;
		ДатаИсправляемогоКорректировочногоДокумента  = ДокументОснование.Дата;
		НомерИсправления = 1;
		НомерЭД = НомерИсправляемогоКорректировочногоДокумента;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОпераций.Исправление
		И ДокументОснование.ВидОперации = Перечисления.ВидыОпераций.Исправление Тогда
		
		НомерИсходногоДокумента = ДокументОснование.НомерИсходногоДокумента;
		ДатаИсходногоДокумента  = ДокументОснование.ДатаИсходногоДокумента;
		НомерИсправляемогоКорректировочногоДокумента = ДокументОснование.НомерИсправляемогоКорректировочногоДокумента;
		ДатаИсправляемогоКорректировочногоДокумента  = ДокументОснование.ДатаИсправляемогоКорректировочногоДокумента;
		НомерИсправления = ДокументОснование.НомерИсправления + 1;
		
		Если ЗначениеЗаполнено(ДокументОснование.НомерИсправляемогоКорректировочногоДокумента)
			И ЗначениеЗаполнено(ДокументОснование.ДатаИсправляемогоКорректировочногоДокумента) Тогда
			НомерИсправленияИсходногоДокумента = ДокументОснование.НомерИсправленияИсходногоДокумента;
			ДатаИсправленияИсходногоДокумента  = ДокументОснование.ДатаИсправленияИсходногоДокумента;
			НомерЭД = НомерИсправляемогоКорректировочногоДокумента;
		Иначе
			НомерИсправленияИсходногоДокумента = ДокументОснование.НомерИсправления;
			ДатаИсправленияИсходногоДокумента  = ДокументОснование.Дата;
			НомерЭД = НомерИсходногоДокумента;
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОпераций.Корректировка
		И ДокументОснование.ВидОперации = Перечисления.ВидыОпераций.Корректировка Тогда
		
		НомерИсходногоДокумента = ДокументОснование.НомерЭД;
		ДатаИсходногоДокумента  = ДокументОснование.Дата;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОпераций.Корректировка
		И ДокументОснование.ВидОперации = Перечисления.ВидыОпераций.Исправление Тогда
		
		Если ЗначениеЗаполнено(ДокументОснование.НомерИсправляемогоКорректировочногоДокумента)
			И ЗначениеЗаполнено(ДокументОснование.ДатаИсправляемогоКорректировочногоДокумента) Тогда
			НомерИсходногоДокумента = ДокументОснование.НомерИсправляемогоКорректировочногоДокумента;
			ДатаИсходногоДокумента  = ДокументОснование.ДатаИсправляемогоКорректировочногоДокумента;
		Иначе
			НомерИсходногоДокумента = ДокументОснование.НомерИсходногоДокумента;
			ДатаИсходногоДокумента  = ДокументОснование.ДатаИсходногоДокумента;
		КонецЕсли;
		НомерИсправленияИсходногоДокумента = ДокументОснование.НомерИсправления;
		ДатаИсправленияИсходногоДокумента  = ДокументОснование.Дата;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

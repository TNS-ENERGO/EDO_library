
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ИспользуетсяНесколькоОрганизацийЭД = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизацийЭД");
	
	Если ИспользуетсяНесколькоОрганизацийЭД Тогда
		Элементы.ПустаяДекорация.Видимость = Ложь;
	ИначеЕсли Не ИспользуетсяНесколькоОрганизацийЭД И НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		Объект.НаправлениеЭД = Перечисления.НаправленияЭД.Исходящий;
	КонецЕсли;
	
	УправлениеФормой();
	ОбновитьЗаголовокФормы();
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании= ОбменСКонтрагентами.ПараметрыПриСозданииНаСервере_ФормаДокумента();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.ДокументСсылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.Направление = Объект.НаправлениеЭД;
	ПараметрыЭДОПриСоздании.ДекорацияСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	
	ОбменСКонтрагентами.ПриСозданииНаСервере_ФормаДокумента(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыПослеЗаписи = ОбменСКонтрагентами.ПараметрыПослеЗаписиНаСервере();
	ПараметрыПослеЗаписи.Форма = ЭтотОбъект;
	ПараметрыПослеЗаписи.ДокументСсылка = Объект.Ссылка;
	ПараметрыПослеЗаписи.ДекорацияСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыПослеЗаписи.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	
	ОбменСКонтрагентами.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ПараметрыПослеЗаписи);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	ОбновитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыОповещения = ОбменСКонтрагентамиКлиент.ПараметрыОповещенияЭДО_ФормаДокумента();
	ПараметрыОповещения.Форма = ЭтотОбъект;
	ПараметрыОповещения.ДокументСсылка = Объект.Ссылка;
	ПараметрыОповещения.ДекорацияСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыОповещения.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	
	ОбменСКонтрагентамиКлиент.ОбработкаОповещения_ФормаДокумента(ИмяСобытия, Параметр, Источник, ПараметрыОповещения);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	Если ИмяСобытия = "ОбновитьДокументИБПослеЗаполнения" И Параметр.Найти(Объект.Ссылка) <> Неопределено Тогда
		Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтметкуНеЗаполненныхРеквизитов();
	УстановитьВидимостьЭлементовСчета();
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ОбменСКонтрагентамиКлиент.ПриОткрытии(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияЭДОНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСКонтрагентамиКлиент.ОткрытьДеревоЭД(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЭДПриИзменении(Элемент)
	
	УстановитьОтметкуНеЗаполненныхРеквизитов();
	
	УстановитьВидимостьРеквизитовДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	ТекущаяСтрокаСтруктурой = Новый Структура;
	ТекущаяСтрокаСтруктурой.Вставить("Номенклатура");
	ТекущаяСтрокаСтруктурой.Вставить("ЕдиницаИзмерения");
	
	ТекущаяСтрокаСтруктурой.Вставить("Цена");
	ТекущаяСтрокаСтруктурой.Вставить("Количество");
	ТекущаяСтрокаСтруктурой.Вставить("Сумма");
	ТекущаяСтрокаСтруктурой.Вставить("СтавкаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаСНДС");
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрокаСтруктурой, ТекущаяСтрока);
	ОбработатьСтрокуТЧ(ТекущаяСтрокаСтруктурой);
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекущаяСтрокаСтруктурой);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	ТекущаяСтрокаСтруктурой = Новый Структура;
	ТекущаяСтрокаСтруктурой.Вставить("Цена");
	ТекущаяСтрокаСтруктурой.Вставить("Количество");
	ТекущаяСтрокаСтруктурой.Вставить("Сумма");
	ТекущаяСтрокаСтруктурой.Вставить("СтавкаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаСНДС");
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрокаСтруктурой, ТекущаяСтрока);
	ОбработатьСтрокуТЧ(ТекущаяСтрокаСтруктурой);
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекущаяСтрокаСтруктурой);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	ТекущаяСтрокаСтруктурой = Новый Структура;
	ТекущаяСтрокаСтруктурой.Вставить("Цена");
	ТекущаяСтрокаСтруктурой.Вставить("Количество");
	ТекущаяСтрокаСтруктурой.Вставить("Сумма");
	ТекущаяСтрокаСтруктурой.Вставить("СтавкаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаСНДС");
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрокаСтруктурой, ТекущаяСтрока);
	ОбработатьСтрокуТЧ(ТекущаяСтрокаСтруктурой);
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекущаяСтрокаСтруктурой);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	ТекущаяСтрокаСтруктурой = Новый Структура;
	ТекущаяСтрокаСтруктурой.Вставить("Цена");
	ТекущаяСтрокаСтруктурой.Вставить("Количество");
	ТекущаяСтрокаСтруктурой.Вставить("Сумма");
	ТекущаяСтрокаСтруктурой.Вставить("СтавкаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаСНДС");
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрокаСтруктурой, ТекущаяСтрока);
	ОбработатьСтрокуТЧ(ТекущаяСтрокаСтруктурой);
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекущаяСтрокаСтруктурой);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	Если ТекущаяСтрока.Сумма = 0 ИЛИ ТекущаяСтрока.Количество = 0 Тогда
		ТекущаяСтрока.Цена = 0;
	Иначе
		ТекущаяСтрока.Цена = Окр(ТекущаяСтрока.Сумма / ТекущаяСтрока.Количество, 2);
	КонецЕсли;
	
	ТекущаяСтрокаСтруктурой = Новый Структура;
	ТекущаяСтрокаСтруктурой.Вставить("Цена");
	ТекущаяСтрокаСтруктурой.Вставить("Количество");
	ТекущаяСтрокаСтруктурой.Вставить("Сумма");
	ТекущаяСтрокаСтруктурой.Вставить("СтавкаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаНДС");
	ТекущаяСтрокаСтруктурой.Вставить("СуммаСНДС");
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрокаСтруктурой, ТекущаяСтрока);
	ОбработатьСтрокуТЧ(ТекущаяСтрокаСтруктурой);
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекущаяСтрокаСтруктурой);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуЭДО(Команда)
	
	ЭлектронноеВзаимодействиеКлиент.ВыполнитьПодключаемуюКомандуЭДО(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработчикОжиданияЭДО()
	
	ОбменСКонтрагентамиКлиент.ОбработчикОжиданияЭДО(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока)
	
	Если ТекущаяСтрока.Свойство("Номенклатура") Тогда
		
		ТекущаяСтрока.ЕдиницаИзмерения = ТекущаяСтрока.Номенклатура.ЕдиницаИзмерения;
		ТекущаяСтрока.СтавкаНДС = ТекущаяСтрока.Номенклатура.СтавкаНДС;
		
		Если ТекущаяСтрока.Свойство("Содержание") Тогда
			ТекущаяСтрока.Содержание = ТекущаяСтрока.Номенклатура.НаименованиеПолное;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена * ТекущаяСтрока.Количество;
	Если ТекущаяСтрока.СтавкаНДС <> Перечисления.СтавкиНДС.БезНДС Тогда
		ЗначениеСтавки = ОбменСКонтрагентамиСлужебный.ЗначениеСтавкиНДСИзПеречисления(ТекущаяСтрока.СтавкаНДС);
	Иначе
		ЗначениеСтавки = 0;
	КонецЕсли;
	ТекущаяСтрока.СуммаНДС = ТекущаяСтрока.Сумма * ЗначениеСтавки;
	ТекущаяСтрока.СуммаСНДС = ТекущаяСтрока.Сумма + ТекущаяСтрока.СуммаНДС;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтметкуНеЗаполненныхРеквизитов()
	
	Если Объект.ВидЭД = ПредопределенноеЗначение("Перечисление.ВидыЭД.ПрайсЛист") Тогда
		
		
		
		Если Объект.НаправлениеЭД = ПредопределенноеЗначение("Перечисление.НаправленияЭД.Входящий") Тогда
			
			Элементы.Контрагент.ОтметкаНезаполненного		= ?(ЗначениеЗаполнено(Объект.Контрагент), Ложь, Истина);
			Элементы.Организация.ОтметкаНезаполненного		= Ложь;
			Элементы.Организация.АвтоОтметкаНезаполненного	= Ложь;
			
		КонецЕсли;
		
	Иначе
		
		Элементы.Контрагент.АвтоОтметкаНезаполненного	= Истина;
		Элементы.Организация.АвтоОтметкаНезаполненного	= Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементовСчета()
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Объект.ВидЭД = ПредопределенноеЗначение("Перечисление.ВидыЭД.СчетНаОплату") Тогда
			
			Если Объект.НаправлениеЭД = ПредопределенноеЗначение("Перечисление.НаправленияЭД.Входящий") Тогда
				Элементы.БанковскийСчетКонтрагента.Видимость = Истина;
				Элементы.БанковскийСчетОрганизации.Видимость = Ложь;
				
			Иначе
				
				Элементы.БанковскийСчетКонтрагента.Видимость = Ложь;
				Элементы.БанковскийСчетОрганизации.Видимость = Истина;
				
			КонецЕсли;
			
		Иначе
			Элементы.БанковскийСчетКонтрагента.Видимость = Ложь;
			Элементы.БанковскийСчетОрганизации.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	УстановитьВидимостьРеквизитовДокумента();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРеквизитовДокумента()
	
	Если Объект.ВидЭД = Перечисления.ВидыЭД.СчетНаОплату Тогда
		
			Элементы.ТоварыДокументОснование.Видимость = Истина;
			
		Если Объект.НаправлениеЭД = Перечисления.НаправленияЭД.Входящий Тогда  
			Элементы.БанковскийСчетКонтрагента.Видимость = Истина;
			Элементы.БанковскийСчетОрганизации.Видимость = Ложь;
			
		Иначе
			
			Элементы.БанковскийСчетКонтрагента.Видимость = Ложь;
			Элементы.БанковскийСчетОрганизации.Видимость = Истина;
		КонецЕсли;
		
	Иначе
		
		Элементы.БанковскийСчетКонтрагента.Видимость = Ложь;
		Элементы.БанковскийСчетОрганизации.Видимость = Ложь;
		Элементы.ТоварыДокументОснование.Видимость = Ложь;
		
	КонецЕсли;
	
	ЭтоПрайс = (Объект.ВидЭД = Перечисления.ВидыЭД.ПрайсЛист);
	ЭтоСчет = (Объект.ВидЭД = Перечисления.ВидыЭД.СчетНаОплату);
	
	Элементы.Основание.Видимость = Не ЭтоПрайс;
	Элементы.ТоварыСумма.Видимость = Не ЭтоПрайс;
	
	Элементы.ТоварыСуммаНДС.Видимость = ЭтоСчет;
	Элементы.ТоварыСуммаСНДС.Видимость = ЭтоСчет;
	Элементы.ТоварыСтавкаНДС.Видимость = ЭтоСчет;

КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокФормы()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Объект.НаправлениеЭД = Перечисления.НаправленияЭД.Исходящий Тогда
			ТекстЗаголовка = НСтр("ru = 'Исходящий Демо: Операция %1 от %2'");
		Иначе
			ТекстЗаголовка = НСтр("ru = 'Входящий Демо: Операция %1 от %2'");
		КонецЕсли;
		Заголовок = СтрШаблон(ТекстЗаголовка, Объект.Номер, Объект.Дата);
	Иначе
		Заголовок = НСтр("ru = 'Исходящий Демо: Операция (создание)'");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();


	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыПокупатель.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ВидЭД");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВидыЭД.ОтчетОПродажахКомиссионногоТовара;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

КонецПроцедуры

#КонецОбласти
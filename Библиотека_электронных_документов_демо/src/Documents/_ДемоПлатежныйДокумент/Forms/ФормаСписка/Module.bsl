
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// ОбменСБанками
	ОбменСБанками.УстановитьУсловноеОформление(Список, "Состояние");
	ОбменСБанками.ПриСозданииНаСервере(ЭтотОбъект, Элементы.КомандыЭДО, , Элементы.ГруппаДиректБанк);
	// Конец ОбменСБанками
	
	ВходящийОтборПоОрганизации = Ложь;
	СтруктураОтбора = Неопределено;
	Если Параметры.Свойство("Отбор", СтруктураОтбора) И ТипЗнч(СтруктураОтбора) = Тип("Структура") Тогда
		ВходящийОтборПоОрганизации = СтруктураОтбора.Свойство("Организация", ОтборОрганизация);
		СтруктураОтбора.Свойство("СчетОрганизации", ОтборСчетОрганизации);
		
		ОтборСчетОрганизацииИспользование = ЗначениеЗаполнено(ОтборСчетОрганизации);
	КонецЕсли;
	
	ОсновнаяОрганизация = Справочники.Организации.ОрганизацияПоУмолчанию();
	
	Если НЕ ВходящийОтборПоОрганизации И ОтборОрганизация <> ОсновнаяОрганизация Тогда
		ОтборОрганизация                 = ОсновнаяОрганизация;
		УстановитьБанковскийСчетОрганизации(ОтборСчетОрганизации, ОтборОрганизация);
		ОтборОрганизацияИспользование    = ЗначениеЗаполнено(ОтборОрганизация);
		ОтборСчетОрганизацииИспользование = ЗначениеЗаполнено(ОтборСчетОрганизации);
	КонецЕсли;
	
	УстановитьВосстановленныеОтборы();
	
	// СтандартныеПодсистемы.Печать
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КомандыПечать;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.Печать
	
	// ЭлектронноеВзаимодействие.ОбменСБанками
	ОбменСБанкамиКлиентСервер.ПоказатьРекламуДиректБанк(
		Элементы.ГруппаРекламаДиректБанкВертикально, Элементы.ТекстДиректБанкВертикально);
	// Конец ЭлектронноеВзаимодействие.ОбменСБанками
	
	Если Элементы.Найти("ФормаСинхронизироватьСБанком") <> Неопределено 
		И Не ОбменСБанками.ПравоВыполненияОбмена() Тогда
		Элементы.ФормаСинхронизироватьСБанком.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	Если ИмяСобытия = "ОбновитьСостояниеОбменСБанками" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	// ЭлектронноеВзаимодействие.ОбменСБанками
	ОбменСБанкамиКлиент.ОбновитьРекламуДиректБанк(ИмяСобытия,
		Элементы.ГруппаРекламаДиректБанкВертикально, Элементы.ТекстДиректБанкВертикально);
	// Конец ЭлектронноеВзаимодействие.ОбменСБанками
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	СтруктураОтбора = Неопределено;
	Если Параметры.Свойство("Отбор", СтруктураОтбора) И ЗначениеЗаполнено(СтруктураОтбора) Тогда
		
		Если СтруктураОтбора.Свойство("Контрагент") И ЗначениеЗаполнено(СтруктураОтбора.Контрагент) Тогда
			ОтборКонтрагент = СтруктураОтбора.Контрагент;
		КонецЕсли;
		
		Если СтруктураОтбора.Свойство("Организация") И ЗначениеЗаполнено(СтруктураОтбора.Организация) Тогда
			ОтборОрганизация = СтруктураОтбора.Организация;
		КонецЕсли;
		
		Если СтруктураОтбора.Свойство("СчетОрганизации") И ЗначениеЗаполнено(СтруктураОтбора.СчетОрганизации) Тогда
			ОтборСчетОрганизации = СтруктураОтбора.СчетОрганизации;
		КонецЕсли;
		
		Параметры.Отбор = Неопределено;
		
	Иначе
		Если ОтборОрганизация <> ОсновнаяОрганизация Тогда
			ОтборОрганизация  = ОсновнаяОрганизация;
			
			// Предварительно сбросим сохраненный банковский счет, т.к. он не принадлежит текущей организации
			// и может быть проблема при RLS.
			ОтборСчетОрганизации = Справочники.БанковскиеСчета.ПустаяСсылка();
			
			УстановитьБанковскийСчетОрганизации(ОтборСчетОрганизации, ОтборОрганизация);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВосстановленныеОтборы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОтборОрганизацияПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСчетОрганизацииПриИзменении(Элемент)
	
	ОтборБанковскийСчетПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСчетОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура();
	Отбор = Новый Структура();
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		Отбор.Вставить("Владелец", ОтборОрганизация);
	КонецЕсли;
	Отбор.Вставить("ТипВладельцаСтрокой", "СправочникСсылка.Организации");
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ОткрытьФорму("Справочник.БанковскиеСчета.ФормаВыбора", ПараметрыФормы, Элемент,,,,);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	ОтборКонтрагентПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура СвернутьОтборыНажатие(Элемент)
	СвернутьРазвернутьПанельОтборов();
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРазвернутьОтборыНажатие(Элемент)
	СвернутьРазвернутьПанельОтборов();
КонецПроцедуры

&НаКлиенте
Процедура ТекстДиректБанкВертикальноОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ОбменСБанкамиКлиент.ОбработкаНавигационнойСсылкиРекламыДиректБанк(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Состояние" Тогда
		ОбменСБанкамиКлиент.ПриНажатииНаГиперссылку(ВыбраннаяСтрока, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СинхронизироватьСБанком(Команда)
	
	ОчиститьСообщения();
	Если ЗначениеЗаполнено(ОтборСчетОрганизации) Тогда
		ПараметрыБанковскогоСчета = ПараметрыБанковскогоСчета(ОтборСчетОрганизации);
		ОбменСБанкамиКлиент.СинхронизироватьСБанком(ПараметрыБанковскогоСчета.Владелец, ПараметрыБанковскогоСчета.Банк);
	Иначе
		ОбменСБанкамиКлиент.СинхронизироватьСБанком();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуЭДО(Команда)
	
	ЭлектронноеВзаимодействиеКлиент.ВыполнитьПодключаемуюКомандуЭДО(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПараметрыБанковскогоСчета(БанковскийСчет)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(БанковскийСчет, "Владелец, Банк");
	
КонецФункции

&НаСервереБезКонтекста
Функция УстановитьБанковскийСчетОрганизации(БанковскийСчет, Знач Организация)
	
	Возврат Обработки._ДемоРазборБанковскойВыписки.УстановитьБанковскийСчетОрганизации(БанковскийСчет, Организация);
	
КонецФункции

#Область УправлениеФормой

&НаСервере
Процедура ОтборКонтрагентПриИзмененииСервер()
	УстановитьВосстановленныеОтборы();
КонецПроцедуры

&НаСервере
Процедура ОтборБанковскийСчетПриИзмененииСервер()
	УстановитьВосстановленныеОтборы();
КонецПроцедуры

&НаСервере
Процедура ОтборОрганизацияПриИзмененииСервер()

	УстановитьБанковскийСчетОрганизации(ОтборСчетОрганизации, ОтборОрганизация);
	УстановитьВосстановленныеОтборы();

КонецПроцедуры

&НаСервере
Процедура УстановитьВосстановленныеОтборы()
	
	УстановитьБыстрыйОтбор("Организация");
	УстановитьБыстрыйОтбор("СчетОрганизации");
	УстановитьБыстрыйОтбор("Контрагент");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьБыстрыйОтбор(ИмяПоля, ВидСравнения = Неопределено)
	
	ПравоеЗначение = ЭтотОбъект["Отбор" + ИмяПоля];
	Если ЗначениеЗаполнено(ПравоеЗначение) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, ИмяПоля, ПравоеЗначение, ВидСравнения);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, ИмяПоля);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьПанельОтборов()
	
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	Элементы.ФильтрыНастройкиИДопИнфо.Видимость  = НовоеЗначениеВидимость;
	Элементы.ДекорацияРазвернутьОтборы.Видимость = НЕ НовоеЗначениеВидимость;
	Элементы.ПраваяПанельСтраницы.Ширина = ?(НовоеЗначениеВидимость, 25, 0);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти





#Область ОписаниеПеременных

// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
&НаКлиенте
Перем ПроверкаКонтрагентовПараметрыОбработчикаОжидания Экспорт;

&НаКлиенте
Перем ФормаДлительнойОперации Экспорт;
// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ПриСозданииНаСервереДокумент(ЭтотОбъект, Параметры);
	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыЭДОПриСоздании= ОбменСКонтрагентами.ПараметрыПриСозданииНаСервере_ФормаДокумента();
	ПараметрыЭДОПриСоздании.Форма = ЭтотОбъект;
	ПараметрыЭДОПриСоздании.ДокументСсылка = Объект.Ссылка;
	ПараметрыЭДОПриСоздании.МестоРазмещенияКоманд = Элементы.КомандыЭДО;
	ПараметрыЭДОПриСоздании.ДекорацияСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыЭДОПриСоздании.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	ОбменСКонтрагентами.ПриСозданииНаСервере_ФормаДокумента(ПараметрыЭДОПриСоздании);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	ПроверкаКонтрагентовКлиент.ПриОткрытииДокумент(ЭтотОбъект);
	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ОбменСКонтрагентамиКлиент.ПриОткрытии(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	ПроверкаКонтрагентовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыОповещения = ОбменСКонтрагентамиКлиент.ПараметрыОповещенияЭДО_ФормаДокумента();
	ПараметрыОповещения.Форма = ЭтотОбъект;
	ПараметрыОповещения.ДокументСсылка = Объект.Ссылка;
	ПараметрыОповещения.ДекорацияСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыОповещения.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	
	ОбменСКонтрагентамиКлиент.ОбработкаОповещения_ФормаДокумента(ИмяСобытия, Параметр, Источник, ПараметрыОповещения);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
	Если ИмяСобытия = "ОбновитьДокументИБПослеЗаполнения" 
		И Параметр.Найти(Объект.Ссылка) <> Неопределено Тогда
		Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ПередЗаписьюНаСервереДокумент(ЭтотОбъект, ТекущийОбъект);
	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ПриЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СформироватьЗаголовокФормы();
	
	УстановитьСтатусДокумента();
	
	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами	
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	ПараметрыПослеЗаписи = ОбменСКонтрагентами.ПараметрыПослеЗаписиНаСервере();
	ПараметрыПослеЗаписи.Форма = ЭтотОбъект;
	ПараметрыПослеЗаписи.ДокументСсылка = Объект.Ссылка;
	ПараметрыПослеЗаписи.ДекорацияСостояниеЭДО = Элементы.ДекорацияСостояниеЭДО;
	ПараметрыПослеЗаписи.ГруппаСостояниеЭДО = Элементы.ГруппаСостояниеЭДО;
	
	ОбменСКонтрагентами.ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, ПараметрыПослеЗаписи);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	ПроверкаКонтрагентовКлиент.ЗапуститьПроверкуКонтрагентовВДокументе(ЭтотОбъект, Объект.Дата);
	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	ПроверкаКонтрагентовКлиент.ЗапуститьПроверкуКонтрагентовВДокументе(ЭтотОбъект, Элемент);
	// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияПредставлениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	Если НавигационнаяСсылка = "ПоказатьСписокДокументовОснования" Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьСписокДокументовОснования();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОблагаетсяНДСУПокупателяПриИзменении(Элемент)
	
	УстановитьВидимостьПолейНДС();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЭДОНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСКонтрагентамиКлиент.ОткрытьДеревоЭД(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	КлиентЭДОКлиент.СопоставитьНоменклатуруПоставщика(Элементы.Товары.ТекущиеДанные, ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Оповещение = Новый ОписаниеОповещения("РазрешитьРедактированиеРеквизитовОбъектаПослеВопроса", ЭтотОбъект);
	КлиентЭДОКлиент.ПоказатьВопросОРазрешенииРедактированияРеквизитовОбъекта(Оповещение, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	СформироватьЗаголовокФормы();
	УстановитьСтатусДокумента();
	УстановитьПредставлениеСчетаФактурыОснования();
	УстановитьПредставлениеДокументовОснования();
	УстановитьВидимостьПолейНДС();
	
	УстановитьВозможностьРедактированияРеквизитов(ЭтотОбъект, Ложь);
	
	Если НЕ ПравоДоступа("Изменение", Объект.Ссылка.Метаданные()) Тогда
		Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.ВидОперации = Перечисления.ВидыОпераций.Реализация Тогда
		Элементы.ГруппаСчетФактураОснование.Видимость = Ложь;
		Элементы.ГруппаНомерИсправления.Видимость = Ложь;
		Элементы.ГруппаНомерДатаИсходногоДокумента.Видимость = Ложь;
		Элементы.ГруппаНомерДатаИсправленияИсходногоДокумента.Видимость = Ложь;
		Элементы.ГруппаНомерДатаИсправляемогоКорректировочногоДокумента.Видимость = Ложь;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОпераций.Исправление Тогда
		Элементы.СчетФактураОснованиеПредставление.Заголовок = НСтр("ru = 'Исправительный к'");
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОпераций.Корректировка Тогда
		Элементы.СчетФактураОснованиеПредставление.Заголовок = НСтр("ru = 'Корректировочный к'");
		Элементы.ГруппаНомерИсправления.Видимость = Ложь;
		Элементы.СтраницаПлатежноРасчетныеДокументы.Видимость = Ложь;
		Элементы.ГруппаНомерДатаИсправляемогоКорректировочногоДокумента.Видимость = Ложь;
		
	КонецЕсли;
	
	ЕстьДокументыОснования = Объект.ДокументыОснования.Количество() > 0;
	
	Элементы.Организация.ТолькоПросмотр        = ЕстьДокументыОснования;
	Элементы.Контрагент.ТолькоПросмотр         = ЕстьДокументыОснования;
	Элементы.ДоговорКонтрагента.ТолькоПросмотр = ЕстьДокументыОснования;
	
	Элементы.СтраницаТовары.Видимость = НЕ ЕстьДокументыОснования;
	Элементы.ГруппаИтоги.Видимость = НЕ ЕстьДокументыОснования;
	
	Элементы.СтраницаТоварыОснования.Видимость = ЕстьДокументыОснования;
	Элементы.ГруппаИтогиОснования.Видимость = ЕстьДокументыОснования;
	
	Если ЕстьДокументыОснования Тогда
		ЗаполнитьТоварыОснования();
		УстановитьВидимостьПолейДоКорректировки(ТоварыОснования);
	Иначе
		УстановитьВидимостьПолейДоКорректировки(Объект.Товары);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаголовокФормы()
	
	ЭтотОбъект.Заголовок = КлиентЭДОКлиентСервер.ПредставлениеВходящегоДокумента(Объект, Объект.Ссылка.Пустая());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусДокумента()
	
	СтатусДокумента = КлиентЭДО.СтатусДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеСчетаФактурыОснования()
	
	Если ЗначениеЗаполнено(Объект.СчетФактураОснование) Тогда
		
		СчетФактураОснованиеПредставление = Новый ФорматированнаяСтрока(
			Строка(Объект.СчетФактураОснование),,
			ЦветаСтиля.ГиперссылкаЦвет,,
			ПолучитьНавигационнуюСсылку(Объект.СчетФактураОснование));
		
	Иначе
		
		ПредставлениеСчетаФактуры = "";
		
		Если ЗначениеЗаполнено(Объект.НомерИсправляемогоКорректировочногоДокумента)
			И ЗначениеЗаполнено(Объект.ДатаИсправляемогоКорректировочногоДокумента) Тогда
			
			ПредставлениеСчетаФактуры = СтрШаблон(НСтр("ru = '%1 от %2'"),
				Объект.НомерИсправляемогоКорректировочногоДокумента,
				Формат(Объект.ДатаИсправляемогоКорректировочногоДокумента, "ДЛФ=D"));
			
		ИначеЕсли ЗначениеЗаполнено(Объект.НомерИсходногоДокумента)
			И ЗначениеЗаполнено(Объект.ДатаИсходногоДокумента) Тогда
			
			Если ЗначениеЗаполнено(Объект.НомерИсправленияИсходногоДокумента)
				И ЗначениеЗаполнено(Объект.ДатаИсправленияИсходногоДокумента) Тогда
				
				ПредставлениеСчетаФактуры = СтрШаблон(НСтр("ru = '%1 (испр. %2) от %3'"),
					Объект.НомерИсходногоДокумента,
					Объект.НомерИсправленияИсходногоДокумента,
					Формат(Объект.ДатаИсправленияИсходногоДокумента, "ДЛФ=D"));
				
			Иначе
				
				ПредставлениеСчетаФактуры = СтрШаблон(НСтр("ru = '%1 от %2'"),
					Объект.НомерИсходногоДокумента,
					Формат(Объект.ДатаИсходногоДокумента, "ДЛФ=D"));
				
			КонецЕсли;
			
		КонецЕсли;
		
		СчетФактураОснованиеПредставление = Новый ФорматированнаяСтрока(
			ПредставлениеСчетаФактуры + " " + НСтр("ru='<Отсутствует>'"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеДокументовОснования()
	
	КоличествоДокументов = Объект.ДокументыОснования.Количество();
	
	Если КоличествоДокументов = 0 Тогда
		Элементы.ГруппаОснование.Видимость = Ложь;
	Иначе
		МассивСтрок = Новый Массив;
		Если КоличествоДокументов = 1 Тогда
			ПервыйДокумент = Объект.ДокументыОснования[0].ДокументОснование;
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
				Строка(ПервыйДокумент), , ЦветаСтиля.ГиперссылкаЦвет, , ПолучитьНавигационнуюСсылку(ПервыйДокумент)));
		Иначе
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
				СтрШаблон(НСтр("ru='Всего документов: %1'"), КоличествоДокументов) , ,
				ЦветаСтиля.ГиперссылкаЦвет, ,
				"ПоказатьСписокДокументовОснования"));
		КонецЕсли;
		
		ДокументыОснованияПредставление = Новый ФорматированнаяСтрока(МассивСтрок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСписокДокументовОснования()
	
	СписокОснований = Новый СписокЗначений;
	Для Каждого СтрокаТаблицы Из Объект.ДокументыОснования Цикл
		СписокОснований.Добавить(СтрокаТаблицы.ДокументОснование);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура("СписокОснований", СписокОснований);
	ОткрытьФорму("Документ.СчетФактураПолученный.Форма.ФормаДокументыОснования",
		ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТоварыОснования();
	
	МассивОснований = Новый Массив;
	Для Каждого СтрокаТаблицы Из Объект.ДокументыОснования Цикл
		МассивОснований.Добавить(СтрокаТаблицы.ДокументОснование);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваровУслуг.Характеристика КАК Характеристика,
		|	ПоступлениеТоваровУслуг.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ПоступлениеТоваровУслуг.КоличествоДоКорректировки КАК КоличествоДоКорректировки,
		|	ПоступлениеТоваровУслуг.Количество КАК Количество,
		|	ПоступлениеТоваровУслуг.ЦенаДоКорректировки КАК ЦенаДоКорректировки,
		|	ПоступлениеТоваровУслуг.Цена КАК Цена,
		|	ПоступлениеТоваровУслуг.СуммаДоКорректировки КАК СуммаДоКорректировки,
		|	ПоступлениеТоваровУслуг.Сумма КАК Сумма,
		|	ПоступлениеТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
		|	ПоступлениеТоваровУслуг.СуммаНДСДоКорректировки КАК СуммаНДСДоКорректировки,
		|	ПоступлениеТоваровУслуг.СуммаНДС КАК СуммаНДС,
		|	ПоступлениеТоваровУслуг.СуммаСНДСДоКорректировки КАК СуммаСНДСДоКорректировки,
		|	ПоступлениеТоваровУслуг.СуммаСНДС КАК СуммаСНДС,
		|	ПоступлениеТоваровУслуг.СуммаАкцизаДоКорректировки КАК СуммаАкцизаДоКорректировки,
		|	ПоступлениеТоваровУслуг.СуммаАкциза КАК СуммаАкциза,
		|	ПоступлениеТоваровУслуг.НомерГТД КАК НомерГТД,
		|	ПоступлениеТоваровУслуг.СтранаПроисхождения КАК СтранаПроисхождения
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Ссылка В (&Основания)";
	
	Запрос.УстановитьПараметр("Основания", МассивОснований);
	
	ТоварыОснования.Очистить();
	НомерСтроки = 1;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТоварыОснования.Добавить();
		НоваяСтрока.НомерСтроки = НомерСтроки;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Элементы.СтраницаТоварыОснования.Заголовок = СтрШаблон(НСтр("ru = 'Товары и услуги (%1)'"),
		ТоварыОснования.Количество());
	
	СуммаНДСДокумента = ТоварыОснования.Итог("СуммаНДС");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПолейДоКорректировки(ТаблицаТовары)
	
	ВидимостьДоКорректировки = Объект.ВидОперации = Перечисления.ВидыОпераций.Корректировка
		ИЛИ (ЗначениеЗаполнено(Объект.НомерИсправляемогоКорректировочногоДокумента)
			И ЗначениеЗаполнено(Объект.ДатаИсправляемогоКорректировочногоДокумента));
	
	Элементы.ТоварыГруппаЗаголовкиСтрок.Видимость       = ВидимостьДоКорректировки;
	Элементы.ТоварыКоличествоДоКорректировки.Видимость  = ВидимостьДоКорректировки;
	Элементы.ТоварыЦенаДоКорректировки.Видимость        = ВидимостьДоКорректировки;
	Элементы.ТоварыСуммаДоКорректировки.Видимость       = ВидимостьДоКорректировки;
	Элементы.ТоварыСуммаНДСДоКорректировки.Видимость    = ВидимостьДоКорректировки;
	Элементы.ТоварыСуммаСНДСДоКорректировки.Видимость   = ВидимостьДоКорректировки;
	Элементы.ТоварыСуммаАкцизаДоКорректировки.Видимость = ВидимостьДоКорректировки;
	
	Элементы.ТоварыОснованияГруппаЗаголовкиСтрок.Видимость       = ВидимостьДоКорректировки;
	Элементы.ТоварыОснованияКоличествоДоКорректировки.Видимость  = ВидимостьДоКорректировки;
	Элементы.ТоварыОснованияЦенаДоКорректировки.Видимость        = ВидимостьДоКорректировки;
	Элементы.ТоварыОснованияСуммаДоКорректировки.Видимость       = ВидимостьДоКорректировки;
	Элементы.ТоварыОснованияСуммаНДСДоКорректировки.Видимость    = ВидимостьДоКорректировки;
	Элементы.ТоварыОснованияСуммаСНДСДоКорректировки.Видимость   = ВидимостьДоКорректировки;
	Элементы.ТоварыОснованияСуммаАкцизаДоКорректировки.Видимость = ВидимостьДоКорректировки;
	
	Если ВидимостьДоКорректировки Тогда
		Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
			ЗаполнитьЗаголовкиСтрок(СтрокаТаблицы);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьЗаголовкиСтрок(СтрокаТаблицы)
	
	СтрокаТаблицы.НадписьДоКорректировки    = НСтр("ru = 'До корректировки:'");
	СтрокаТаблицы.НадписьПослеКорректировки = НСтр("ru = 'После корректировки:'");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПолейНДС()
	
	ВидимостьНДС = НЕ Объект.ОблагаетсяНДСУПокупателя;
	
	Элементы.ТоварыСтавкаНДС.Видимость = ВидимостьНДС;
	Элементы.ТоварыГруппаСуммаНДС.Видимость  = ВидимостьНДС;
	Элементы.ТоварыГруппаСуммаСНДС.Видимость = ВидимостьНДС;
	Элементы.ИтогиВсегоНДС.Видимость = ВидимостьНДС;
	
	Элементы.ТоварыОснованияСтавкаНДС.Видимость = ВидимостьНДС;
	Элементы.ТоварыОснованияГруппаСуммаНДС.Видимость  = ВидимостьНДС;
	Элементы.ТоварыОснованияГруппаСуммаСНДС.Видимость = ВидимостьНДС;
	Элементы.ИтогиОснованияВсегоНДС.Видимость = ВидимостьНДС;
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеРеквизитовОбъектаПослеВопроса(Ответ, Параметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УстановитьВозможностьРедактированияРеквизитов(ЭтотОбъект);
		Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВозможностьРедактированияРеквизитов(Форма, Значение = Истина)
	
	Заблокировать = НЕ Значение;
	
	Элементы = Форма.Элементы;
	
	Элементы.Контрагент.ТолькоПросмотр = Заблокировать;
	Элементы.Организация.ТолькоПросмотр = Заблокировать;
	
	Элементы.ПлатежноРасчетныеДокументыДатаПлатежноРасчетногоДокумента.ТолькоПросмотр = Заблокировать;
	Элементы.ПлатежноРасчетныеДокументыНомерПлатежноРасчетногоДокумента.ТолькоПросмотр = Заблокировать;
	
	Элементы.Получен.ТолькоПросмотр = Заблокировать;
	Элементы.ДатаПолучения.ТолькоПросмотр = Заблокировать;
	Элементы.ДоговорКонтрагента.ТолькоПросмотр = Заблокировать;
	Элементы.ИдентификаторГосКонтракта.ТолькоПросмотр = Заблокировать;
	Элементы.НомерИсходногоДокумента.ТолькоПросмотр = Заблокировать;
	Элементы.ДатаИсходногоДокумента.ТолькоПросмотр = Заблокировать;
	Элементы.НомерИсправленияИсходногоДокумента.ТолькоПросмотр = Заблокировать;
	Элементы.ДатаИсправленияИсходногоДокумента.ТолькоПросмотр = Заблокировать;
	Элементы.НомерИсправляемогоКорректировочногоДокумента.ТолькоПросмотр = Заблокировать;
	Элементы.ДатаИсправляемогоКорректировочногоДокумента.ТолькоПросмотр = Заблокировать;
	Элементы.ОблагаетсяНДСУПокупателя.ТолькоПросмотр = Заблокировать;
	
	Элементы.ТоварыНоменклатураПоставщика.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыЕдиницаИзмерения.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыКоличествоДоКорректировки.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыКоличество.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыЦенаДоКорректировки.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыЦена.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСуммаДоКорректировки.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСумма.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСтавкаНДС.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСуммаНДСДоКорректировки.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСуммаНДС.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСуммаСНДСДоКорректировки.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСуммаСНДС.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСуммаАкцизаДоКорректировки.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСуммаАкциза.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыНомерГТД.ТолькоПросмотр = Заблокировать;
	Элементы.ТоварыСтранаПроисхождения.ТолькоПросмотр = Заблокировать;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ИнтернетПоддержкаПользователей.РаботаСКонтрагентами

&НаКлиенте
Процедура Подключаемый_ПоказатьПредложениеИспользоватьПроверкуКонтрагентов()
	ПроверкаКонтрагентовКлиент.ПредложитьВключитьПроверкуКонтрагентов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработатьРезультатПроверкиКонтрагентов()
	ПроверкаКонтрагентовКлиент.ОбработатьРезультатПроверкиКонтрагентовВДокументе(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОтобразитьРезультатПроверкиКонтрагента() Экспорт
	ПроверкаКонтрагентов.ОтобразитьРезультатПроверкиКонтрагентаВДокументе(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПроверитьКонтрагентовФоновоеЗадание(ПараметрыФоновогоЗадания) Экспорт
	ПроверкаКонтрагентов.ПроверитьКонтрагентовВДокументеФоновоеЗадание(ЭтотОбъект, ПараметрыФоновогоЗадания);
КонецПроцедуры

// Конец ИнтернетПоддержкаПользователей.РаботаСКонтрагентами

// ЭлектронноеВзаимодействие.ОбменСКонтрагентами

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуЭДО(Команда)
	
	ЭлектронноеВзаимодействиеКлиент.ВыполнитьПодключаемуюКомандуЭДО(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработчикОжиданияЭДО()
	
	ОбменСКонтрагентамиКлиент.ОбработчикОжиданияЭДО(ЭтотОбъект);
	
КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами

#КонецОбласти
